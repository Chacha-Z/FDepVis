[{"D:\\Code\\FDepVis\\src\\index.js":"1","D:\\Code\\FDepVis\\src\\Dashboard.js":"2","D:\\Code\\FDepVis\\src\\views\\FamilyTree\\index.js":"3","D:\\Code\\FDepVis\\src\\views\\ScatterPlot\\index.js":"4","D:\\Code\\FDepVis\\src\\views\\FamilySelector\\index.js":"5","D:\\Code\\FDepVis\\src\\views\\AttributesHeatmap\\index.js":"6","D:\\Code\\FDepVis\\src\\views\\DetailInfo\\index.js":"7","D:\\Code\\FDepVis\\src\\redux\\index.js":"8","D:\\Code\\FDepVis\\src\\redux\\actions.js":"9","D:\\Code\\FDepVis\\src\\redux\\reducers.js":"10","D:\\Code\\FDepVis\\src\\redux\\state.js":"11"},{"size":193,"mtime":1572995136000,"results":"12","hashOfConfig":"13"},{"size":1962,"mtime":1609118392372,"results":"14","hashOfConfig":"13"},{"size":15894,"mtime":1609120983050,"results":"15","hashOfConfig":"13"},{"size":8721,"mtime":1609124161908,"results":"16","hashOfConfig":"13"},{"size":3888,"mtime":1608994327503,"results":"17","hashOfConfig":"13"},{"size":10826,"mtime":1609124230257,"results":"18","hashOfConfig":"13"},{"size":8300,"mtime":1609073122487,"results":"19","hashOfConfig":"13"},{"size":285,"mtime":1606035451211,"results":"20","hashOfConfig":"13"},{"size":534,"mtime":1608988664138,"results":"21","hashOfConfig":"13"},{"size":1289,"mtime":1608994797015,"results":"22","hashOfConfig":"13"},{"size":1247,"mtime":1609119712947,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jthuuv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Code\\FDepVis\\src\\index.js",[],["51","52"],"D:\\Code\\FDepVis\\src\\Dashboard.js",["53"],"import React, {\n  Component\n} from 'react';\nimport {\n  Row,\n  Col\n} from 'antd';\nimport ScatterPlot from './views/ScatterPlot';\nimport FamilySelector from './views/FamilySelector';\nimport FamilyTree from './views/FamilyTree';\nimport AttributesHeatmap from './views/AttributesHeatmap';\nimport DetailInfo from './views/DetailInfo';\nimport './dashboard.css';\n\n\nexport default class Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    return ( <\n      div >\n      <Row style = {\n        {\n          height: '95vh'\n        }\n      } >\n      <Col span = {\n        6\n      }\n      style = {\n        {\n          height: '100%'\n        }\n      } >\n      <Row style = {\n        {\n          height: '40%'\n        }\n      } >\n      <\n      ScatterPlot / >\n      </Row> \n      <Row style = {\n        {\n          height: '60%'\n        }\n      } >\n      <\n      FamilySelector / >\n      </Row> </Col> \n      <Col span = {\n        18\n      }\n      style = {\n        {\n          height: '100%'\n        }\n      } >\n      <Row style = {\n        {\n          height: '60%'\n        }\n      } >\n      <FamilyTree / >\n      </Row> \n      <Row style = {\n        {\n          height: '40%'\n        }\n      } >\n      <Col span = {\n        13\n      }\n      style = {\n        {\n          height: '100%',\n          backgroundColor: \"#FFF\"\n        }\n      } > < AttributesHeatmap / > </Col> <\n      Col span = {\n        11\n      }\n      style = {\n        {\n          height: '100%'\n        }\n      } > < DetailInfo / > </Col> \n      </Row> </Col> \n      </Row> \n      <Row style = {\n        {\n          height: '5vh'\n        }\n      }\n      id = 'footer' >\n      <div style = {\n        {\n          textAlign: \"center\"\n        }\n      }>\n      Source Code < a href = 'https://github.com/Chacha-Z/FDepVis' > https: //github.com/Chacha-Z/FDepVis</a>;\n      Author < a href = '#' > 我来取个名 </a>; </div> </Row> </div>\n    )\n  }\n}","D:\\Code\\FDepVis\\src\\views\\FamilyTree\\index.js",["54","55","56","57","58","59","60","61"],"import React, { Component } from 'react';\nimport './FamilyTree.css';\nimport * as d3 from 'd3';\nimport store from '../../redux/index';\nimport axios from 'axios';\nimport action from '../../redux/actions'\n\nexport default class FamilyTree extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      focusFamily: ''\n    }\n  }\n  componentDidMount(){\n    this.makeKey()\n    store.subscribe(()=>{\n        this.uploadData()\n    })\n    this.uploadData();\n  }\n  \n  uploadData() {\n    \n    const focusFamily = store.getState().focusFamily\n    axios.get(\"http://106.52.126.175/api/getFamilyTree/\"+'?fid='+focusFamily\n    ).then((res) => {\n        let data = res.data;\n        this.setState({\n            focusFamily: focusFamily\n        })\n        this.drawHorPro(data);\n    })\n}\n  \n  // 改进垂直树\n  drawHorPro(data){\n\n        // console.log('drawHorPro')\n        const width = document.getElementById(\"FamilyTree\").clientWidth\n        const height = document.getElementById(\"FamilyTree\").clientHeight-45-60\n    \n        var graphicOpt = {\n          width: width,\n          height: height,\n          margin: 20,\n        }\n    \n        let graphicOpt_radialC = {  //节点大小和颜色设置\n            width:16,\n            height:16,\n            color: d3.scaleOrdinal()\n                // .range(['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f', \"silver\", \"teal\", \"black\", \"yellow\"])\n                .range([\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\",\"#eea60d\",\"#a9402a\",\"#845d54\",\"#056f1f\",\"#475e4c\"])\n        }\n    \n        d3.selection.prototype.moveToFront = function() {\n            return this.each(function(){\n                this.parentNode.appendChild(this);\n            });\n        };  \n        let dataLists =[];\n        \n        loadTree(0);\n    \n        function loadTree(isRight){\n          dataLists[+isRight] = {id: 'Tree'+(+isRight), data:data};\n          createHolder(dataLists)\n        }\n\n        // 添加SVG对象\n        function createHolder(listTree) { // [{id: family1, data: loaded from json}]\n          let holders = d3.select('#FamilyTree')\n              .selectAll('div.svgHolder')\n              .data(listTree, d=>d.id)\n              .call(updateHoders);\n          holders.exit().remove();\n          holders\n              .enter()\n              .append('div')\n              .attr('class','svgHolder')\n              .call(updateHoders);\n    \n          function updateHoders(p){\n              return p.attr('id',d=>d.id)\n                  .each(function(d){drawTree('#'+d.id, d.data, graphicOpt)});\n          }\n        }\n    \n        function drawTree(holder, data, graphicOpt) {\n          // 定义画布维度和边界\n          var width = graphicOpt.width;\n          var height = graphicOpt.height;\n          var margin = graphicOpt.margin; // dendrogram的直径\n          var pn = data.length < 60?1: data.length/60;\n        //   console.log(data.length, data.length/100, pn)\n          let div = d3.select(holder);\n          div.select('svg').remove()\n          var svg = div\n                    .append(\"svg\")\n                    .attr('id', 'treesvg')\n                    .attr(\"width\", width*pn)\n                    .attr(\"height\", height)\n                    .append(\"g\")\n                    .attr('class','content')\n                    .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n          svg.selectAll(\"*\").remove();\n          // 定义cluster(dendrogram)布局:\n          var cluster = d3.cluster()\n            //   .size([360, radius - 20]);  // 360指整个圆. radius-60指dendrogram周围有20个像素\n              .size([width*pn-margin*2, height-margin*3]);  //  [width, height]\n    \n          // 为cluster布局绑定数据:\n          var root = d3.stratify()\n              .id(function (d) {\n                  return d.id;\n              })\n              .parentId(function (d) {\n                  return d.parent;\n              })\n              (data);\n\n          cluster(root)\n    \n          // 节点与节点之间链接生成器\n          var linksGenerator = d3.linkVertical()\n                                .x(function(d) { return d.x; })\n                                .y(function(d) { return d.y; });\n    \n          // 在节点间添加链接:\n          svg.selectAll('path')\n              .data(root.links())\n              .enter()\n              .append('path')\n              .attr(\"d\", linksGenerator)\n              .style(\"fill\", 'none')                                                                                                                                                                                                                                        \n              .attr(\"stroke\", '#ccc')\n            // console.log(root.links());\n    \n          // 为每个节点添加圆.\n          var node = svg.selectAll(\".node\")\n              .data(root.descendants())\n              .enter()\n              .append(\"g\")\n              .attr(\"class\", \"node\")\n              .attr(\"transform\", function (d) {\n                  return \"translate(\" + d.x +\",\"+ d.y + \")\";\n              });\n            // console.log(root.descendants()); \n    \n          let focusPerson = store.getState().focusPID\n          // 为每个节点画一或两个圆，需要对原数据进行修改，将原数据拆分成一或二长度的数组，再对数组中每个数据进行操作（画圆）\n          node.selectAll('circle').data(d => {\n              let datainput=[];\n              if (d.data.group === \"individual\")\n                  datainput = [{key: 'ind', data: [d.data]}];\n              else\n                  datainput = [{key: 'self', data: [d.data]}, {key: 'spouse', data: d.data.spouse}];\n              if(d.data.children){\n                datainput.push({key: 'children', data: d.data.children})\n              }\n\n              return datainput.filter(p => p.data.filter(pp => !pp.clinical_data )); // 只针对未自杀或自杀却没有临床属性数据的\n            }).enter()\n              .append('g')\n              .attr('transform',d=>{\n                let rad = d.key === 'individual'?3:8;\n                let par = d.key === 'individual'?2.8:2.2;\n                let x = 0, y = 0;\n                if(d.key === 'spouse'){\n                    x = rad*par;\n                }\n                if(d.key === 'children'){\n                    x -= d.data.length%2 == 0 ? (d.data.length/2)*rad-rad/2 : Math.floor((d.data.length/2))*rad;\n                    y = 15;\n                }\n                return `translate(${x}, ${y})`\n              })\n              .selectAll('g')\n              .data(d => d.data)\n              .enter()\n              .append('g')\n              .attr('transform',(d, i)=>{\n                let rad = d.group === 'individual'?3:8;\n                let par = d.group === 'individual'?2.8:2.2;\n                let x = i*rad*par, y = 0;\n                if(d.sex === 'M' ){\n                    x -= rad;\n                    y -= rad;\n                }\n                return `translate(${x}, ${y})`\n              })\n              .on('mouseover',function(d){\n                  $tooltip.transition()\n                      .duration(100)\n                      .style('opacity', .85)\n\n                  let html = \"ID: \" + d.id + '<br/>';\n\n                  let coordinates = d3.mouse(container);\n\n                  $tooltip.html(html)\n                      .style('left', (coordinates[0]-20)+'px')\n                      .style('top', (coordinates[1]-30)+'px')\n\n              }).on('mouseout',function(){\n                  \n                  $tooltip.transition()\t\t\n                          .duration(200)\t\t\n                          .style(\"opacity\", 0);\t\n              })\n              .each(function(d){\n                  let coupleholder =  d3.select(this);\n                  let rad = d.group === 'individual'?3:8;\n                  if(d.sex === 'F'){ \n                    coupleholder.append('circle')\n                                .attr(\"r\", rad)\n                  }else{\n                    coupleholder.append('rect')\n                                .attr(\"width\", rad*2)\n                                .attr(\"height\", rad*2)\n                  }\n              })\n              .style(\"fill\", function (d) {\n                  if (d.is_suicide == 'Y') { //自杀的人（却没有临床属性数据），红色\n                      return \"red\"\n                  }\n                  if (d.is_deceased == 'Y') {\n                      return \"black\"\n                  } else {\n                      return \"#69b3a2\"\n                  }\n    \n              })\n              .attr(\"stroke\", \"#999\")\n              .style(\"stroke-width\", .5);\n\n          let $tooltip = d3.select('.tree-tooltip')\n          let container = d3.select('#FamilyTree').node()\n          node  // 针对自杀且有临床属性数据的，使用饼图进行绘制\n              .selectAll('g.personRadial').data(d => {\n                let datainput=[];\n                if (d.data.group === \"individual\")\n                    datainput = [{key: 'ind', data: d.data}];\n                else\n                    datainput = [{key: 'self', data: d.data}, {key: 'spouse', data: d.data.spouse[0]}];\n      \n                return datainput.filter(p => p.data.clinical_data );\n              }).enter()\n                .append('g')\n                .attr('class','personRadial')\n                .attr('transform',d=>{\n                  let rad = d.key === 'individual'?3:8;\n                  let par = d.group === 'individual'?2.8:2.2;\n                  let x = 0, y = 0; \n                  if(d.key === 'spouse'){\n                    x = rad*par;\n                  }\n                  return `translate(${x}, ${y})`\n                })\n                .attr('cursor', 'pointer')\n                .attr('transform', d=>d.data.id == focusPerson? 'scale(2)': 'scale(1)')\n                .on('mouseover',function(d){\n                    if(d.data.id != focusPerson){\n                      d3.select(this.parentNode).moveToFront();\n                      d3.select(this).select('g').attr('transform','scale(4)');\n                    }else{\n                      d3.select(this).select('g').attr('transform','scale(2)');\n                    }\n\n                    $tooltip.transition()\n                        .duration(100)\n                        .style('opacity', .85)\n\n                    let html = \"ID: \" + d.data.id + '<br/>';\n                    let cli_d = d3.entries(d.data.clinical_data)\n                    let count = 1;              //计算不为零的临床属性的个数\n                    for (let i in cli_d){       //i为下标\n                      let key = cli_d[i].key;\n                      let value = cli_d[i].value;\n                        if(value !== 0){\n                          html += \"<br/><svg width='10', height='10'><rect width='10', height='10', rx='2', style='fill:\" + graphicOpt_radialC.color(key) + \"'></svg> \" + key + \": \" + value;\n                          count++;\n                        }\n                    }\n\n                    let coordinates = d3.mouse(container);\n                    // console.log(coordinates)\n                    $tooltip.html(html)\n                        .style('left', (coordinates[0]-20)+'px')\n                        .style('top', (coordinates[1]-count*15-30)+'px')\n\n                }).on('mouseout',function(){\n                    d3.select(this).select('g').attr('transform','scale(1)');\n                    \n                    $tooltip.transition()\t\t\n                            .duration(200)\n                            .style(\"opacity\", 0);\t\n                })\n                .on('click', function(d){\n                    store.dispatch(action.selectPerson(d.data.id))\n                })\n                .each(function(d){\n                    // 画饼图\n                    drawRadialChart({holder: d3.select(this),    //在该遍历数据及元素上绘制\n                                     d: d.data,\n                                     graphicopt: graphicOpt_radialC})\n                })\n        }\n    \n        function drawRadialChart({holder, d, graphicopt}) {\n          let width = graphicopt.width;\n          let height = graphicopt.height;\n          let barHeight = height / 2;\n          let color = graphicopt.color;\n          let g = holder.append(\"g\")\n        \n          var data = d3.pie().value(d=>d.value)(d3.entries(d.clinical_data));\n    \n          var arc = d3.arc()\n              .innerRadius(0)\n              .outerRadius(barHeight);\n          \n          if(d.sex === 'M' ){\n            arc.outerRadius(Math.sqrt(2)*barHeight);\n            g.append(\"circle\")\n                .attr(\"r\", Math.sqrt(2)*barHeight)\n            g.append('rect')\n                    .attr('x', -barHeight)\n                    .attr('y', -barHeight)\n                    .attr('width', barHeight*2)\n                    .attr('height', barHeight*2)\n                    .style(\"fill\", \"white\")\n                    .style(\"stroke\", \"red\")\n                    .style(\"stroke-width\", 0.5);\n            \n            //蒙版\n            g.append('clipPath')\n                .attr('id', 'mark-area')\n                .append('rect')\n                .attr('x', -barHeight)\n                .attr('y', -barHeight)\n                .attr('width', barHeight*2)\n                .attr('height', barHeight*2)\n            g.attr('clip-path', 'url(#mark-area)')\n          }else{\n            g.append(\"circle\")\n                .attr(\"r\", barHeight)\n                .classed(\"outer\", true)\n                .style(\"fill\", \"white\")\n                .style(\"stroke\", \"red\")\n                .style(\"stroke-width\", 0.5);\n\n          }\n        \n          var segments = g.selectAll(\"path\")\n            .data(data)\n            .enter().append(\"path\")\n            .style(\"fill\", function (d) {\n                return color(d.data.key);\n            })\n            .attr(\"d\", arc)\n        }\n\n    }\n\n    makeKey(){\n      var margin_left = 60;\n      var width = document.getElementById(\"FamilyTree\").clientWidth-margin_left\n      var keys = [\n          \"alcohol\",\"psychosis\",\"anxiety-non-trauma\",\"somatic disorder\", \"eating\", \n          \"bipolar spectrum illness\",\"depression\",\"interpersonal trauma\",\"PD-Cluster C-anxiety\",\"PD-Cluster B-emotional\",\n          \"PD\",\"Impulse control disorder\",\"obesity\",\"cardiovascular\",\"COPD\",\"asthma\",\"immune-autoimmune\"]\n\n      var colors = [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\",\"#eea60d\",\"#a9402a\",\"#845d54\",\"#056f1f\",\"#475e4c\"]\n\n      var group = d3.select(\"#legendsvg\")\n                  .attr('height', 60)\n                  .attr('width', width)\n                  .append(\"g\")\n                  .attr('class', 'legends')\n                  .selectAll('g')\n                  .data(keys)\n                  .enter()\n                  .append('g').attr('class', 'keysgroup')\n                  .attr('transform', (d, i)=>`translate(${60 + (i%8)*148}, ${Math.floor(i/8)*20})`)\n      group\n          .append('rect')\n          .attr('width', 12)\n          .attr('height', 12)\n          .attr(\"rx\", 4)\n          .style(\"fill\", (d, i)=>colors[i])\n      group.append('text')\n          .attr(\"y\", '0.9em')\n          .attr(\"dx\", 15)\n          .style(\"font-size\", \"12px\")\n          .text(d=>d);\n  }\n\n    render() {\n        return (\n          <>\n            <div id='FamilyTree' className='pane' >\n                <div className='header'>Family Tree : F{this.state.focusFamily}</div>\n                <div class='legend-div'>\n                  <svg id='legendsvg'></svg>\n                </div>\n                <div class='tree-tooltip'></div>\n            </div>\n          </>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\views\\ScatterPlot\\index.js",["62","63"],"D:\\Code\\FDepVis\\src\\views\\FamilySelector\\index.js",["64","65","66","67","68","69"],"import React, { Component } from 'react';\nimport './FamilySelector.css';\nimport { Table, Tag, Space } from 'antd';\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class FamilySelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            columns: [\n                {\n                    title: 'ID',\n                    dataIndex: 'ID',\n                    key: 'ID'\n                },\n                {\n                    title: 'people',\n                    dataIndex: 'people',\n                    key: 'people'\n                },\n                {\n                    title: 'SNum',\n                    dataIndex: 'SNum',\n                    key: 'SNum'\n                }\n            ]\n        };\n    }\n    componentDidMount(){\n        this.setState({\n            dataSource: store.getState().familyInfo\n        }, ()=>{\n            this.setFocus();\n        });\n        store.subscribe(()=>{\n            this.setFocus();\n        })\n    }\n\n    setFocus(){\n        let focusFamily = store.getState().focusFamily;\n        let nodes = document.getElementsByClassName('ant-table-row');\n        console.log(nodes)\n        for(var i = 0; i < nodes.length; i++){\n            let key = nodes[i].getAttribute('data-row-key')\n            if(key == focusFamily){\n                nodes[i].classList.add('onFocus')\n            }else{\n                nodes[i].classList.remove('onFocus')\n            }\n        }\n    }\n    onRowClick(e){\n        console.log(e)\n    }\n\n    getElementByAttr(tag,attr,value){\n        var aElements=document.getElementsByTagName(tag);\n        var aEle=[];\n        for(var i=0;i<aElements.length;i++)\n        {\n            if(aElements[i].getAttribute(attr)==value)\n                aEle.push( aElements[i] );\n        }\n        return aEle;\n    }\n    render() {\n        return (\n            <div id='FamilySelector' className='pane'>\n                <div className='header'>Family Selector</div>\n                <Table \n                    onRow={record => {\n                        return {\n                            onClick: event => {\n                                console.log(record)\n                                let node = this.getElementByAttr('tr', 'data-row-key', record.key)[0];\n                                let nclasses = node.getAttribute('class');\n                                if(nclasses.indexOf('onSelect') == -1){ // 未选中 - 选中\n                                    node.classList.add('onSelect')\n                                    store.dispatch(action.addFamily(record.ID)) \n                                }else{                                  // 选中\n                                    if(nclasses.indexOf('onFocus') == -1){  // 选中，但未focus - focus\n                                        node.classList.add('onFocus')\n                                        store.dispatch(action.selectFamily(record.ID))\n                                    }else{\n                                        node.classList.remove('onSelect')   // 选中，且focus - 取消选中\n                                        store.dispatch(action.removeFamily(record.ID))\n                                    }\n                                }\n                            }\n                        };\n                    }}\n                    rowClassName={record => {\n                        return  store.getState().selectedFamily.indexOf(record.key) !== -1 ? 'onSelect' : '';\n                    }}\n                    dataSource={this.state.dataSource} columns={this.state.columns} size='small'\n                    pagination={{\n                        hideOnSinglePage: true,\n                        defaultPageSize: 10\n                    }}\n                />\n            </div>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\views\\AttributesHeatmap\\index.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"D:\\Code\\FDepVis\\src\\views\\DetailInfo\\index.js",["85","86","87","88","89","90","91","92"],"import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './DetailInfo.css';\nimport { Row, Col, List, Descriptions} from 'antd';\nimport store from '../../redux/index';\nimport axios from 'axios';\n\nexport default class DetailInfo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ID: 'ID: ',\n            img:\"./img/ASPHYXIA.jpg\",\n            data: {\n                ID: 133,\n                Sex: 'M',\n                Birth_Year: 1900,\n                Death_Year: 1950,\n                BMI: 25,\n                Suicide_Weapon: 'Rope',\n                Death_Cause:'Acute carbon monoxide poisoning',\n                suicide_glyphs:''\n            },\n\n\n        }\n    }\n\n\n\n\n    componentDidMount() {\n        store.subscribe(() => {\n            this.uploadData()\n        })\n        this.uploadData()\n    }\n\n\n    uploadData() {\n        const focusPID = store.getState().focusPID\n        axios.get(\"http://106.52.126.175/api/getDetailInfo/\" + '?pid=' + focusPID\n        ).then((res) => {\n            let data = res.data;\n            console.log(\"detailInfo\", data)\n            // if (data.maxbmi == 0) {\n            //     data.maxbmi = 22\n            // }\n            this.setState({\n                ID: 'ID: ' + data.pid,\n                img: \"./img/\" + data.suicide_glyphs + \".png\",\n                data: {\n                    ID: data.pid,\n                    Sex: data.sex,\n                    Birth_Year: data.bdate.slice(0,4),\n                    Death_Year: data.ddate.slice(0,4),\n                    BMI: data.maxbmi.toPrecision(4), //保留四位有效数字\n                    Suicide_Weapon: data.weapon,\n                    Death_Cause: data.cause_death,\n                    \n                },\n    \n            })\n            // document.getElementById(\"BarChart\").innerHTML = ''\n            // document.getElementById(\"Heatmap\").innerHTML = ''\n            this.drawChart()\n        })\n    }\n\n    drawChart() {\n\n        // preserveAspectRatio=\"none\" 不保留长宽比例\n        const man_body = '<svg preserveAspectRatio=\"none\" id=\"man\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2940\" width=\"200\" height=\"200\"><path d=\"M512 88m-88 0a88 88 0 1 0 176 0 88 88 0 1 0-176 0Z\" fill=\"#333333\" p-id=\"2941\"></path><path d=\"M744.9 619.6c-21.3 5.7-43.3-6.9-49-28.3l-64.1-239c-1.2-4.5-7.9-3.6-7.9 1V1008c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16V640c0-8.8-7.2-16-16-16s-16 7.2-16 16v368c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16V353.3c0-4.7-6.7-5.6-7.9-1l-64.1 239c-5.7 21.3-27.7 34-49 28.3-21.3-5.7-34-27.6-28.3-49l69.5-260C339 240.7 402.4 192 474.8 192h74.3c72.5 0 135.9 48.7 154.6 118.7l69.5 260c5.7 21.3-6.9 43.2-28.3 48.9z\" fill=\"#333333\" p-id=\"2942\"></path></svg>'\n\n        const woman_body = '<svg preserveAspectRatio=\"none\" id=\"woman\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2987\" width=\"225\" height=\"225\"><path d=\"M529.218 234.374c43.289 0 81.292 28.8 93 70.475l59.925 213.319c3.427 12.199-3.685 24.867-15.884 28.294-2.02 0.567-4.107 0.855-6.205 0.855-17.951 0-33.758-11.825-38.826-29.046l-53.568-182.01h-16.407l95.16 333.52h-87.43v244.56c0 19.694-15.966 35.659-35.66 35.659-19.693 0-35.658-15.965-35.658-35.659v-244.56h-17.112v245.697c0 18.983-15.39 34.372-34.372 34.372h-0.15c-19.09-0.084-34.522-15.583-34.522-34.673V669.78h-90.078l95.242-333.519h-14.872l-51.123 180.873c-5.047 17.855-21.342 30.183-39.897 30.183-13.136 0-23.785-10.649-23.785-23.785 0-2.17 0.297-4.329 0.882-6.418l59.465-212.205c11.687-41.706 49.705-70.535 93.017-70.535h98.858zM479.962 71c40.643 0 73.59 32.967 73.59 73.634 0 40.666-32.947 73.633-73.59 73.633s-73.59-32.967-73.59-73.633c0-40.667 32.947-73.634 73.59-73.634z\" fill=\"#333333\" p-id=\"2988\"></path></svg>'\n\n        let sex_icon;\n        if(this.state.data.Sex == 'M') {\n            sex_icon = man_body\n        } else if (this.state.data.Sex == 'F'){\n            sex_icon = woman_body\n        }\n        document.getElementById(\"body\").innerHTML = sex_icon\n\n        const height = document.getElementById(\"body\").clientHeight\n        const width = document.getElementById(\"body\").clientWidth\n\n        let bmi = this.state.data.BMI\n\n        if (bmi == 0) {\n            bmi = 22\n        }\n\n        //let new_width = 200;\n        let new_width = width * (bmi / 22)\n        let new_height = height * 0.9\n        console.log(bmi / 22, new_width)\n\n        if (this.state.data.Sex == 'M'){\n        d3.select(\"#man\")\n            .attr('width', new_width)\n            .attr(\"height\", new_height)\n            .attr(\"transform\", `translate(${(200 - new_width) / 2},${new_height * 0.05})`)\n            \n        } else if (this.state.data.Sex == 'F') {\n        d3.select(\"#woman\")\n            .attr('width', new_width)\n            .attr(\"height\", new_height)\n            .attr(\"transform\", `translate(${(200 - new_width) / 2}, ${new_height * 0.05})`)\n        }\n      \n\n        // -----------------  rect 透明蒙板 ------------------------\n        // console.log(this.state.data.ddate)\n        // console.log(this.state.data.bdate)\n        let age = this.state.data.Death_Year - this.state.data.Birth_Year\n\n        console.log(age)\n\n        let svg = d3.select(\"#body\").append('svg')\n            .attr(\"width\", width).attr(\"height\", height)\n            .attr(\"transform\", `translate(0, ${- (100-age) * 1.8})`);\n\n        svg.append(\"rect\")\n            .attr(\"width\", width).attr(\"height\", 200)\n            .attr(\"fill\", \"white\")\n            .attr(\"opacity\", 0.35)\n    }\n\n\n    render() {\n        return (\n            <div id='DetailInfo' className='pane' style={{overflow : \"hidden\"}}>\n                <div className='header'>Detail Information</div>\n\n                {/* <div id = 'info' style={{ left : 200}}>  </div> */}\n\n                <Row justify=\"space-around\" align=\"middle\">\n\n                    <Col span={10} style={{ paddingTop: 10 }}>\n                        <Row>                       \n                            <div id='body' style={{ margin: 10 }}> </div>                       \n                        </Row>\n\n                        {/* <Row>\n                        <img width={100} style={{}} src=\"./img/ASPHYXIA.jpg\"/>\n                        </Row> */}\n\n                    </Col>\n\n                    <Col span={14} >\n                    \n                        <Descriptions title={this.state.ID} style={{ padding: 10 }} >\n                            <Descriptions.Item label=\"Sex\" span={2}>\n                                {this.state.data.Sex}\n                            </Descriptions.Item>\n                            \n                            <Descriptions.Item label=\"BMI\" span={2}>\n                                {this.state.data.BMI}\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Birth Year\" span={2}>\n                                {this.state.data.Birth_Year}\n                            </Descriptions.Item>\n                            \n                            <Descriptions.Item label=\"Death Year\" span={2}>\n                                {this.state.data.Death_Year}\n                            </Descriptions.Item>\n                            \n                            <Descriptions.Item label=\"Death Age\" span={4}>\n                                {this.state.data.Death_Year - this.state.data.Birth_Year}\n                            </Descriptions.Item>\n\n                    \n                            \n\n                            <Descriptions.Item label=\"Death Cause\" span={4}>\n                                {this.state.data.Death_Cause}\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Suicide Weapon\" span={2}>\n                                {this.state.data.Suicide_Weapon}\n                            </Descriptions.Item>     \n\n                            <Descriptions.Item label=\"\"  >\n                                <img width={50} style={{}} src={this.state.img}/>\n                            </Descriptions.Item>\n                            \n                        </Descriptions>\n\n                    </Col>\n\n                    {/* <Col span={1}></Col> */}\n\n                </Row>\n\n            </div>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\redux\\index.js",[],"D:\\Code\\FDepVis\\src\\redux\\actions.js",[],"D:\\Code\\FDepVis\\src\\redux\\reducers.js",[],"D:\\Code\\FDepVis\\src\\redux\\state.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":106,"column":14,"nodeType":"99","endLine":106,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":27,"column":57,"nodeType":"102","messageId":"103","endLine":27,"endColumn":58},{"ruleId":"104","severity":1,"message":"105","line":175,"column":42,"nodeType":"102","messageId":"106","endLine":175,"endColumn":44},{"ruleId":"104","severity":1,"message":"105","line":226,"column":36,"nodeType":"102","messageId":"106","endLine":226,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":229,"column":37,"nodeType":"102","messageId":"106","endLine":229,"endColumn":39},{"ruleId":"104","severity":1,"message":"105","line":263,"column":49,"nodeType":"102","messageId":"106","endLine":263,"endColumn":51},{"ruleId":"104","severity":1,"message":"107","line":265,"column":34,"nodeType":"102","messageId":"106","endLine":265,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":313,"column":15,"nodeType":"110","messageId":"111","endLine":313,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":357,"column":15,"nodeType":"110","messageId":"111","endLine":357,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":184,"column":38,"nodeType":"102","messageId":"106","endLine":184,"endColumn":40},{"ruleId":"100","severity":1,"message":"101","line":206,"column":66,"nodeType":"102","messageId":"103","endLine":206,"endColumn":67},{"ruleId":"108","severity":1,"message":"113","line":3,"column":17,"nodeType":"110","messageId":"111","endLine":3,"endColumn":20},{"ruleId":"108","severity":1,"message":"114","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":50,"column":20,"nodeType":"102","messageId":"106","endLine":50,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":66,"column":47,"nodeType":"102","messageId":"106","endLine":66,"endColumn":49},{"ruleId":"104","severity":1,"message":"105","line":82,"column":65,"nodeType":"102","messageId":"106","endLine":82,"endColumn":67},{"ruleId":"104","severity":1,"message":"105","line":86,"column":68,"nodeType":"102","messageId":"106","endLine":86,"endColumn":70},{"ruleId":"100","severity":1,"message":"101","line":56,"column":56,"nodeType":"102","messageId":"103","endLine":56,"endColumn":57},{"ruleId":"108","severity":1,"message":"115","line":70,"column":9,"nodeType":"110","messageId":"111","endLine":70,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":104,"column":20,"nodeType":"118","messageId":"119","endLine":104,"endColumn":32},{"ruleId":"108","severity":1,"message":"120","line":138,"column":11,"nodeType":"110","messageId":"111","endLine":138,"endColumn":17},{"ruleId":"108","severity":1,"message":"121","line":158,"column":11,"nodeType":"110","messageId":"111","endLine":158,"endColumn":17},{"ruleId":"108","severity":1,"message":"122","line":212,"column":9,"nodeType":"110","messageId":"111","endLine":212,"endColumn":14},{"ruleId":"108","severity":1,"message":"123","line":231,"column":11,"nodeType":"110","messageId":"111","endLine":231,"endColumn":22},{"ruleId":"108","severity":1,"message":"124","line":232,"column":9,"nodeType":"110","messageId":"111","endLine":232,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":260,"column":47,"nodeType":"102","messageId":"103","endLine":260,"endColumn":48},{"ruleId":"108","severity":1,"message":"125","line":279,"column":11,"nodeType":"110","messageId":"111","endLine":279,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":293,"column":27,"nodeType":"102","messageId":"106","endLine":293,"endColumn":29},{"ruleId":"108","severity":1,"message":"126","line":312,"column":11,"nodeType":"110","messageId":"111","endLine":312,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":323,"column":50,"nodeType":"102","messageId":"106","endLine":323,"endColumn":52},{"ruleId":"104","severity":1,"message":"105","line":324,"column":41,"nodeType":"102","messageId":"106","endLine":324,"endColumn":43},{"ruleId":"108","severity":1,"message":"127","line":355,"column":7,"nodeType":"110","messageId":"111","endLine":355,"endColumn":11},{"ruleId":"108","severity":1,"message":"128","line":4,"column":20,"nodeType":"110","messageId":"111","endLine":4,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":42,"column":62,"nodeType":"102","messageId":"103","endLine":42,"endColumn":63},{"ruleId":"104","severity":1,"message":"105","line":78,"column":32,"nodeType":"102","messageId":"106","endLine":78,"endColumn":34},{"ruleId":"104","severity":1,"message":"105","line":80,"column":40,"nodeType":"102","messageId":"106","endLine":80,"endColumn":42},{"ruleId":"104","severity":1,"message":"105","line":90,"column":17,"nodeType":"102","messageId":"106","endLine":90,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":99,"column":33,"nodeType":"102","messageId":"106","endLine":99,"endColumn":35},{"ruleId":"104","severity":1,"message":"105","line":105,"column":40,"nodeType":"102","messageId":"106","endLine":105,"endColumn":42},{"ruleId":"129","severity":1,"message":"130","line":186,"column":33,"nodeType":"99","endLine":186,"endColumn":82},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'width' is assigned a value but never used.","Identifier","unusedVar","'segments' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'allCount' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'margin' is assigned a value but never used.","'colors' is assigned a value but never used.","'xAxis' is assigned a value but never used.","'rectPadding' is assigned a value but never used.","'container' is assigned a value but never used.","'nameLabels' is assigned a value but never used.","'cardsEnter' is assigned a value but never used.","'data' is assigned a value but never used.","'List' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]