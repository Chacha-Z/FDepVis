[{"/Users/piny/Desktop/FDepVis/src/index.js":"1","/Users/piny/Desktop/FDepVis/src/Dashboard.js":"2","/Users/piny/Desktop/FDepVis/src/views/AttributesHeatmap/index.js":"3","/Users/piny/Desktop/FDepVis/src/views/ScatterPlot/index.js":"4","/Users/piny/Desktop/FDepVis/src/views/FamilyTree/index.js":"5","/Users/piny/Desktop/FDepVis/src/views/FamilySelector/index.js":"6","/Users/piny/Desktop/FDepVis/src/views/DetailInfo/index.js":"7","/Users/piny/Desktop/FDepVis/src/redux/actions.js":"8","/Users/piny/Desktop/FDepVis/src/redux/index.js":"9","/Users/piny/Desktop/FDepVis/src/redux/reducers.js":"10","/Users/piny/Desktop/FDepVis/src/redux/state.js":"11"},{"size":193,"mtime":1604899090445,"results":"12","hashOfConfig":"13"},{"size":1855,"mtime":1609065971210,"results":"14","hashOfConfig":"13"},{"size":13543,"mtime":1609145520259,"results":"15","hashOfConfig":"13"},{"size":8621,"mtime":1608994879385,"results":"16","hashOfConfig":"13"},{"size":15396,"mtime":1608994879384,"results":"17","hashOfConfig":"13"},{"size":3888,"mtime":1608994879382,"results":"18","hashOfConfig":"13"},{"size":8295,"mtime":1609145530841,"results":"19","hashOfConfig":"13"},{"size":534,"mtime":1608994879379,"results":"20","hashOfConfig":"13"},{"size":285,"mtime":1606056302365,"results":"21","hashOfConfig":"13"},{"size":1289,"mtime":1608994879379,"results":"22","hashOfConfig":"13"},{"size":1245,"mtime":1608994879380,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"eicsey",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/piny/Desktop/FDepVis/src/index.js",[],["51","52"],"/Users/piny/Desktop/FDepVis/src/Dashboard.js",["53"],"import React, { Component } from 'react';\nimport {  Row, Col  } from 'antd';\nimport ScatterPlot from './views/ScatterPlot';\nimport FamilySelector from './views/FamilySelector';\nimport FamilyTree from './views/FamilyTree';\nimport AttributesHeatmap from './views/AttributesHeatmap';\nimport DetailInfo from './views/DetailInfo';\nimport './dashboard.css';\n\n\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Row style={{ height: '95vh' }}>\n                    <Col span={6} style={{ height: '100%' }}>\n                        <Row style={{ height: '40%' }}>\n                            <ScatterPlot />\n                        </Row>\n                        <Row style={{ height: '60%' }}>\n                            <FamilySelector />\n                        </Row>\n                    </Col>\n                    <Col span={18} style={{ height: '100%' }}>\n                        <Row style={{ height: '60%' }}>\n                            <FamilyTree/>\n                        </Row>\n                        <Row style={{ height: '40%' }}>\n                            <Col span={13} style={{ height: '100%' }}><AttributesHeatmap /></Col>\n                            <Col span={11} style={{ height: '100%' }}><DetailInfo /></Col>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row style={{ height: '5vh' }} id='footer' >\n                    <div style={{textAlign: \"center\"}}>\n                        Source Code <a href='https://github.com/Chacha-Z/FDepVis'>https://github.com/Chacha-Z/FDepVis</a>;\n                        Author <a href='#'>我来取个名</a>;\n                    </div>\n                </Row>\n            </div>\n        )\n    }\n}\n","/Users/piny/Desktop/FDepVis/src/views/AttributesHeatmap/index.js",["54","55","56","57","58","59","60","61","62","63","64"],"/Users/piny/Desktop/FDepVis/src/views/ScatterPlot/index.js",["65"],"import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './ScatterPlot.css';\nimport axios from 'axios';\n\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class ScatterPlot extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            data: [\n                [11,27,2],\n                [98,21,2],\n                [17,40,3],\n                [43,21,3],\n                [61,1,3],\n                [2,66,1],\n                [92,52,2],\n                [41,93,1],\n                [54,59,1],\n                [12,4,1],\n                [82,90,1],\n                [90,18,1],\n                [77,54,3],\n                [60,21,1],\n                [73,47,2],\n                [64,73,1],\n                [24,30,3],\n                [42,86,2],\n                [63,35,3],\n                [27,29,1],\n                [5,87,2],\n                [89,55,2],\n                [100,24,3],\n                [76,93,3],\n                [13,1,2],\n                [99,39,3],\n                [66,96,2],\n                [41,72,1],\n                [33,28,2],\n                [1,16,2],\n                [35,19,2],\n                [48,56,1],\n                [72,2,3],\n                [96,17,1],\n                [86,19,1],\n                [20,7,1],\n                [77,39,3],\n                [15,84,2],\n                [40,51,1],\n                [25,23,2],\n                [8,51,2],\n                [31,84,3],\n                [85,1,3],\n                [100,93,2],\n                [94,85,2],\n                [100,67,1],\n                [64,93,3],\n                [44,71,1],\n                [1,80,3],\n                [50,2,3],\n                [45,87,2],\n                [60,3,1],\n                [14,60,2],\n                [22,91,3],\n                [4,59,2],\n                [100,95,2],\n                [25,38,2],\n                [71,44,2],\n                [89,10,3],\n                [38,46,2],\n                [4,38,1],\n                [78,98,3],\n                [59,92,3],\n                [91,2,1],\n                [37,27,3],\n                [45,15,2],\n                [90,90,3],\n                [77,45,2],\n                [88,20,3],\n                [19,84,2],\n                [78,46,3],\n                [68,39,3],\n                [76,32,2],\n                [69,42,1],\n                [81,71,1],\n                [65,71,1],\n                [68,96,2],\n                [3,97,1],\n                [46,56,2],\n                [47,83,2],\n                [56,87,3],\n                [8,95,1],\n                [11,42,1],\n                [13,6,3],\n                [26,81,2],\n                [1,89,2],\n                [23,64,2],\n                [71,81,1],\n                [64,28,1],\n                [87,94,2],\n                [62,20,1],\n                [53,40,1],\n                [70,18,2],\n                [78,27,2],\n                [51,96,2],\n                [83,68,1],\n                [54,10,3],\n                [24,41,3],\n                [90,4,1],\n                [56,45,1]\n            ]\n        }\n    }\n\n    componentDidMount(){\n        store.subscribe(()=>{\n            this.drawChart()\n        })\n        this.uploadData()\n    }\n    \n    uploadData() {\n        const _this = this;\n        axios.get(\"http://106.52.126.175/api/getTsneview/\"\n        ).then((res) => {\n            // console.log(res);\n            let data = res.data;\n\n            _this.setState(\n                {\n                    data: data\n                }, () => {\n                    // console.log(this.state);\n                    _this.drawChart();\n                })\n        })\n    }\n    drawChart() {\n        var selectedF = store.getState().selectedFamily;\n        d3.select(\"#ScatterPlot svg\").remove()\n        const points = this.state.data.filter(d=>selectedF.indexOf(d.fid) !== -1)\n        const margin = 20\n        const marginRight = 90  // 定义右边距\n        const width = document.getElementById(\"ScatterPlot\").clientWidth\n        const height = document.getElementById(\"ScatterPlot\").clientHeight - 30\n        const innerWidth = width - margin - marginRight\n        const innerHeight = height - margin*2\n\n        const svg = d3.select(\"#ScatterPlot\")\n                        .append(\"svg\")\n                        .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n                        .attr(\"viewBox\", \"0 0 \" + width +\" \"+ height)\n\n        let x = d3.scaleLinear()\n            .domain([0, Math.max(...points.map(d => d.x))])\n            .range([0, innerWidth])\n\n        let y = d3.scaleLinear()\n            .rangeRound([0, innerHeight])\n            .domain([Math.max(...points.map(d => d.y)), 0])\n\n        let z = d3.scaleOrdinal()\n                .domain([\"38\", \"149\", \"27251\", \"42623\", \"68939\", \"176860\", \"603481\", \"791533\", \"903988\"])\n                .range(['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6'])\n\n        let fig = svg.append('g')\n            .attr('transform', 'translate(' + 10 + ',' + 10 + ')')\n\n        let $tooltip = d3.select('.plot-tooltip')\n        // console.log(points)\n        fig.append('g') // 输出点\n            .selectAll('circle')\n            // .attr('class', 'points')\n            .data(points)\n            .enter()\n            .append('circle')\n            .attr('cursor', 'pointer')\n            // .on('mouseover', tip.show)\n            // .on('mouseout', tip.hide)\n            .attr('fill', function(d) {\n                return z(d.fid)\n            })\n            .attr('cx', function(d) {\n                return x(d.x)\n            })\n            .attr('cy', function(d) {\n                return y(d.y)\n            })\n            .attr('r', 6)\n            .style('opacity',\"0.6\")\n            .on('mouseover', function(d){\n                d3.select(this)\n                    .style('opacity', 1)\n\n                $tooltip.transition()\n                    .duration(100)\n                    .style('opacity', .7)\n\n                let coordinates = d3.mouse(this);\n                $tooltip.html( 'Family ID:  ' + d.fid + '<br/>'  + 'Persion ID: ' + d.pid)\n                    .style('left', (coordinates[0]+10)+'px')\n                    .style('top', (coordinates[1])+'px')\n            })\t\n            .on(\"mouseout\", function(d) {\n                d3.select(this)\n                    .style('opacity', 0.6)\n                \n                $tooltip.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n            })\n            .on('click', function(d){\n                store.dispatch(action.selectFamily(d.fid))\n                store.dispatch(action.selectPerson(d.pid))\n            })\n       \n        let legend = fig\n            .append('g') // 画legend\n            .attr('font-family', 'Arial')\n            .attr('font-size', \"12px\")\n            .attr(\"font-weight\",\"500\")\n            .attr('transform', `translate(${innerWidth+(margin/2)+10},0)`)\n            .attr('text-anchor', 'start')\n            .selectAll('g')\n            .data(store.getState().selectedFamily)\n            .enter()\n            .append('g')\n            .attr('transform', function(d, i) {\n                return 'translate(0,' + i * 25 + ')'\n            })\n            .on('click', d=>{\n                store.dispatch(action.selectFamily(d))\n            })\n            .attr('cursor', 'pointer')\n        \n        \n        var focusFamily = store.getState().focusFamily;\n        legend.each(function(d){\n            if(d === focusFamily){\n                d3.select(this)\n                    .append('rect')\n                    .style(\"fill\", '#bbb')\n                    .attr('width', 75)\n                    .attr('height', 20)\n                    .style(\"opacity\", '0.7')\n                    .attr('rx', 5)\n                    .attr('x', -5)\n                    .attr('y', -4)\n                    .style(\"stroke-width\", 0.5);\n            }\n        })\n        legend\n            .append('circle')\n            .attr('r', 6)\n            .attr('cx', 6)\n            .attr('cy', 6)\n            .attr('fill', z)\n            .style(\"opacity\", d=>d === focusFamily? '1': '0.7')\n\n        legend\n            .append('text')\n            .attr('x', 18)\n            .attr('dy', 10)\n            .text(function(d) {\n                return \"F\" + d\n            })\n            .attr('fill', d=> d === focusFamily? '#fff': '#000')\n\n    }\n    render() {\n\n        return (\n            <div id='ScatterPlot' className='pane'>\n                <div className='header'>Scatter Plot</div>\n                <div class='plot-tooltip'></div>\n            </div>\n        )\n    }\n}\n","/Users/piny/Desktop/FDepVis/src/views/FamilyTree/index.js",["66","67","68","69","70","71"],"import React, { Component } from 'react';\nimport './FamilyTree.css';\nimport * as d3 from 'd3';\nimport store from '../../redux/index';\nimport axios from 'axios';\nimport action from '../../redux/actions'\n\nexport default class FamilyTree extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      focusFamily: ''\n    }\n  }\n  componentDidMount(){\n    store.subscribe(()=>{\n        this.uploadData()\n    })\n    this.uploadData();\n  }\n      \n  uploadData() {\n    \n    const focusFamily = store.getState().focusFamily\n    axios.get(\"http://106.52.126.175/api/getFamilyTree/\"+'?fid='+focusFamily\n    ).then((res) => {\n        let data = res.data;\n        this.setState({\n            focusFamily: focusFamily\n        })\n        this.drawHorPro(data);\n    })\n}\n  \n  // 改进垂直树\n  drawHorPro(data){\n\n        // console.log('drawHorPro')\n        const width = document.getElementById(\"FamilyTree\").clientWidth\n        const height = document.getElementById(\"FamilyTree\").clientHeight-45\n    \n        var graphicOpt = {\n          width: width,\n          height: height,\n          margin: 20,\n        }\n    \n        let graphicOpt_radialC = {  //节点大小和颜色设置\n            width:16,\n            height:16,\n            color: d3.scaleOrdinal()\n                // .range(['#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f', \"silver\", \"teal\", \"black\", \"yellow\"])\n                .range([\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\",\"#eea60d\",\"#a9402a\",\"#845d54\",\"#056f1f\",\"#475e4c\"])\n        }\n    \n        d3.selection.prototype.moveToFront = function() {\n            return this.each(function(){\n                this.parentNode.appendChild(this);\n            });\n        };  \n        let dataLists =[];\n        \n        loadTree(0);\n        makeKey();\n    \n        function loadTree(isRight){\n          dataLists[+isRight] = {id: 'Tree'+(+isRight), data:data};\n          createHolder(dataLists)\n        }\n\n        // 添加SVG对象\n        function createHolder(listTree) { // [{id: family1, data: loaded from json}]\n          let holders = d3.select('#FamilyTree')\n              .selectAll('div.svgHolder')\n              .data(listTree, d=>d.id)\n              .call(updateHoders);\n          holders.exit().remove();\n          holders\n              .enter()\n              .append('div')\n              .attr('class','svgHolder')\n              .call(updateHoders);\n    \n          function updateHoders(p){\n              return p.attr('id',d=>d.id)\n                  .each(function(d){drawTree('#'+d.id, d.data, graphicOpt)});\n          }\n        }\n    \n        function drawTree(holder, data, graphicOpt) {\n          // 定义画布维度和边界\n          var width = graphicOpt.width;\n          var height = graphicOpt.height;\n          var margin = graphicOpt.margin; // dendrogram的直径\n          var pn = data.length < 60?1: data.length/60;\n        //   console.log(data.length, data.length/100, pn)\n          let div = d3.select(holder);\n          div.select('svg').remove()\n          var svg = div\n                    .append(\"svg\")\n                    .attr('id', 'treesvg')\n                    .attr(\"width\", width*pn)\n                    .attr(\"height\", height)\n                    .append(\"g\")\n                    .attr('class','content')\n                    .attr(\"transform\", \"translate(\" + margin + \",\" + (margin+30) + \")\");\n          svg.selectAll(\"*\").remove();\n          // 定义cluster(dendrogram)布局:\n          var cluster = d3.cluster()\n            //   .size([360, radius - 20]);  // 360指整个圆. radius-60指dendrogram周围有20个像素\n              .size([width*pn-margin*2, height-margin*3-40]);  //  [width, height]\n    \n          // 为cluster布局绑定数据:\n          var root = d3.stratify()\n              .id(function (d) {\n                  return d.id;\n              })\n              .parentId(function (d) {\n                  return d.parent;\n              })\n              (data);\n\n          cluster(root)\n    \n          // 节点与节点之间链接生成器\n          var linksGenerator = d3.linkVertical()\n                                .x(function(d) { return d.x; })\n                                .y(function(d) { return d.y; });\n    \n          // 在节点间添加链接:\n          svg.selectAll('path')\n              .data(root.links())\n              .enter()\n              .append('path')\n              .attr(\"d\", linksGenerator)\n              .style(\"fill\", 'none')                                                                                                                                                                                                                                        \n              .attr(\"stroke\", '#ccc')\n            // console.log(root.links());\n    \n          // 为每个节点添加圆.\n          var node = svg.selectAll(\".node\")\n              .data(root.descendants())\n              .enter()\n              .append(\"g\")\n              .attr(\"class\", \"node\")\n              .attr(\"transform\", function (d) {\n                  return \"translate(\" + d.x +\",\"+ d.y + \")\";\n              });\n            // console.log(root.descendants()); \n    \n          // 为每个节点画一或两个圆，需要对原数据进行修改，将原数据拆分成一或二长度的数组，再对数组中每个数据进行操作（画圆）\n          node.selectAll('circle').data(d => {\n              let datainput=[];\n              if (d.data.group === \"individual\")\n                  datainput = [{key: 'ind', data: [d.data]}];\n              else\n                  datainput = [{key: 'self', data: [d.data]}, {key: 'spouse', data: d.data.spouse}];\n              if(d.data.children){\n                datainput.push({key: 'children', data: d.data.children})\n              }\n\n              return datainput.filter(p => p.data.filter(pp => !pp.clinical_data )); // 只针对未自杀或自杀却没有临床属性数据的\n            }).enter()\n              .append('g')\n              .attr('transform',d=>{\n                let rad = d.key === 'individual'?3:8;\n                let par = d.key === 'individual'?2.8:2.2;\n                let x = 0, y = 0;\n                if(d.key === 'spouse'){\n                    x = rad*par;\n                }\n                if(d.key === 'children'){\n                    x -= d.data.length%2 == 0 ? (d.data.length/2)*rad-rad/2 : Math.floor((d.data.length/2))*rad;\n                    y = 15;\n                }\n                return `translate(${x}, ${y})`\n              })\n              .selectAll('g')\n              .data(d => d.data)\n              .enter()\n              .append('g')\n              .attr('transform',(d, i)=>{\n                let rad = d.group === 'individual'?3:8;\n                let par = d.group === 'individual'?2.8:2.2;\n                let x = i*rad*par, y = 0;\n                if(d.sex === 'M' ){\n                    x -= rad;\n                    y -= rad;\n                }\n                return `translate(${x}, ${y})`\n              })\n              .on('mouseover',function(d){\n                  $tooltip.transition()\n                      .duration(100)\n                      .style('opacity', .85)\n\n                  let html = \"ID: \" + d.id + '<br/>';\n\n                  let coordinates = d3.mouse(container);\n\n                  $tooltip.html(html)\n                      .style('left', (coordinates[0]-20)+'px')\n                      .style('top', (coordinates[1])+'px')\n\n              }).on('mouseout',function(){\n                  \n                  $tooltip.transition()\t\t\n                          .duration(200)\t\t\n                          .style(\"opacity\", 0);\t\n              })\n              .each(function(d){\n                  let coupleholder =  d3.select(this);\n                  let rad = d.group === 'individual'?3:8;\n                  if(d.sex === 'F'){ \n                    coupleholder.append('circle')\n                                .attr(\"r\", rad)\n                  }else{\n                    coupleholder.append('rect')\n                                .attr(\"width\", rad*2)\n                                .attr(\"height\", rad*2)\n                  }\n              })\n              .style(\"fill\", function (d) {\n                  if (d.is_suicide == 'Y') { //自杀的人（却没有临床属性数据），红色\n                      return \"red\"\n                  }\n                  if (d.is_deceased == 'Y') {\n                      return \"black\"\n                  } else {\n                      return \"#69b3a2\"\n                  }\n    \n              })\n              .attr(\"stroke\", \"#999\")\n              .style(\"stroke-width\", .5);\n\n          let $tooltip = d3.select('.tree-tooltip')\n          let container = d3.select('#treesvg').node()\n          node  // 针对自杀且有临床属性数据的，使用饼图进行绘制\n              .selectAll('g.personRadial').data(d => {\n                let datainput=[];\n                if (d.data.group === \"individual\")\n                    datainput = [{key: 'ind', data: d.data}];\n                else\n                    datainput = [{key: 'self', data: d.data}, {key: 'spouse', data: d.data.spouse[0]}];\n      \n                return datainput.filter(p => p.data.clinical_data );\n              }).enter()\n                .append('g')\n                .attr('class','personRadial')\n                .attr('transform',d=>{\n                  let rad = d.key === 'individual'?3:8;\n                  let par = d.group === 'individual'?2.8:2.2;\n                  let x = 0, y = 0; \n                  if(d.key === 'spouse'){\n                    x = rad*par;\n                  }\n                  return `translate(${x}, ${y})`\n                })\n                .attr('cursor', 'pointer')\n                .on('mouseover',function(d){\n                    d3.select(this.parentNode).moveToFront();\n                    d3.select(this).select('g').attr('transform','scale(4)');\n\n                    $tooltip.transition()\n                        .duration(100)\n                        .style('opacity', .85)\n\n                    let html = \"ID: \" + d.data.id + '<br/>';\n                    let cli_d = d3.entries(d.data.clinical_data)\n                    let count = 1;              //计算不为零的临床属性的个数\n                    for (let i in cli_d){       //i为下标\n                      let key = cli_d[i].key;\n                      let value = cli_d[i].value;\n                        if(value !== 0){\n                          html += \"<br/><svg width='10', height='10'><rect width='10', height='10', rx='2', style='fill:\" + graphicOpt_radialC.color(key) + \"'></svg> \" + key + \": \" + value;\n                          count++;\n                        }\n                    }\n\n                    let coordinates = d3.mouse(container);\n                    // console.log(coordinates)\n                    $tooltip.html(html)\n                        .style('left', (coordinates[0]-20)+'px')\n                        .style('top', (coordinates[1]-count*15)+'px')\n\n                }).on('mouseout',function(){\n                    d3.select(this).select('g').attr('transform','scale(1)');\n                    \n                    $tooltip.transition()\t\t\n                            .duration(200)\n                            .style(\"opacity\", 0);\t\n                })\n                .on('click', function(d){\n                    store.dispatch(action.selectPerson(d.data.id))\n                })    \n                .each(function(d){\n                    // 画饼图\n                    drawRadialChart({holder: d3.select(this),    //在该遍历数据及元素上绘制\n                                     d: d.data,\n                                     graphicopt: graphicOpt_radialC})\n                })\n        }\n    \n        function drawRadialChart({holder, d, graphicopt}) {\n          let width = graphicopt.width;\n          let height = graphicopt.height;\n          let barHeight = height / 2;\n          let color = graphicopt.color;\n          let g = holder.append(\"g\")\n        \n          var data = d3.pie().value(d=>d.value)(d3.entries(d.clinical_data));\n    \n          var arc = d3.arc()\n              .innerRadius(0)\n              .outerRadius(barHeight);\n          \n          if(d.sex === 'M' ){\n            arc.outerRadius(Math.sqrt(2)*barHeight);\n            g.append(\"circle\")\n                .attr(\"r\", Math.sqrt(2)*barHeight)\n            g.append('rect')\n                    .attr('x', -barHeight)\n                    .attr('y', -barHeight)\n                    .attr('width', barHeight*2)\n                    .attr('height', barHeight*2)\n                    .style(\"fill\", \"white\")\n                    .style(\"stroke\", \"red\")\n                    .style(\"stroke-width\", 0.5);\n            \n            //蒙版\n            g.append('clipPath')\n                .attr('id', 'mark-area')\n                .append('rect')\n                .attr('x', -barHeight)\n                .attr('y', -barHeight)\n                .attr('width', barHeight*2)\n                .attr('height', barHeight*2)\n            g.attr('clip-path', 'url(#mark-area)')\n          }else{\n            g.append(\"circle\")\n                .attr(\"r\", barHeight)\n                .classed(\"outer\", true)\n                .style(\"fill\", \"white\")\n                .style(\"stroke\", \"red\")\n                .style(\"stroke-width\", 0.5);\n\n          }\n        \n          var segments = g.selectAll(\"path\")\n            .data(data)\n            .enter().append(\"path\")\n            .style(\"fill\", function (d) {\n                return color(d.data.key);\n            })\n            .attr(\"d\", arc)\n        }\n\n        function makeKey(){\n            var keys = [\n                \"alcohol\",\"psychosis\",\"anxiety-non-trauma\",\"somatic disorder\", \"eating\", \n                \"bipolar spectrum illness\",\"depression\",\"interpersonal trauma\",\"PD-Cluster C-anxiety\",\"PD-Cluster B-emotional\",\n                \"PD\",\"Impulse control disorder\",\"obesity\",\"cardiovascular\",\"COPD\",\"asthma\",\"immune-autoimmune\"]\n\n            var colors = [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\",\"#eea60d\",\"#a9402a\",\"#845d54\",\"#056f1f\",\"#475e4c\"]\n\n            var group = d3.select(\"#treesvg\")\n                        .append(\"g\").attr('class', 'legends')\n                        .selectAll('g')\n                        .data(keys)\n                        .enter()\n                        .append('g').attr('class', 'keysgroup')\n                        .attr('transform', (d, i)=>`translate(${60 + (i%8)*130}, ${Math.floor(i/8)*20})`)\n            group\n                .append('rect')\n                .attr('width', 12)\n                .attr('height', 12)\n                .attr(\"rx\", 4)\n                .style(\"fill\", (d, i)=>colors[i])\n            group.append('text')\n                .attr(\"y\", '0.9em')\n                .attr(\"dx\", 15)\n                .style(\"font-size\", \"10px\")\n                .text(d=>d);\n        }\n        \n    }\n\n\n    render() {\n        return (\n            <div id='FamilyTree' className='pane' >\n                <div className='header'>Family Tree : F{this.state.focusFamily}</div>\n                <div class='tree-tooltip'></div>\n            </div>\n        )\n    }\n}","/Users/piny/Desktop/FDepVis/src/views/FamilySelector/index.js",["72","73","74","75","76","77"],"import React, { Component } from 'react';\nimport './FamilySelector.css';\nimport { Table, Tag, Space } from 'antd';\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class FamilySelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            columns: [\n                {\n                    title: 'ID',\n                    dataIndex: 'ID',\n                    key: 'ID'\n                },\n                {\n                    title: 'people',\n                    dataIndex: 'people',\n                    key: 'people'\n                },\n                {\n                    title: 'SNum',\n                    dataIndex: 'SNum',\n                    key: 'SNum'\n                }\n            ]\n        };\n    }\n    componentDidMount(){\n        this.setState({\n            dataSource: store.getState().familyInfo\n        }, ()=>{\n            this.setFocus();\n        });\n        store.subscribe(()=>{\n            this.setFocus();\n        })\n    }\n\n    setFocus(){\n        let focusFamily = store.getState().focusFamily;\n        let nodes = document.getElementsByClassName('ant-table-row');\n        console.log(nodes)\n        for(var i = 0; i < nodes.length; i++){\n            let key = nodes[i].getAttribute('data-row-key')\n            if(key == focusFamily){\n                nodes[i].classList.add('onFocus')\n            }else{\n                nodes[i].classList.remove('onFocus')\n            }\n        }\n    }\n    onRowClick(e){\n        console.log(e)\n    }\n\n    getElementByAttr(tag,attr,value){\n        var aElements=document.getElementsByTagName(tag);\n        var aEle=[];\n        for(var i=0;i<aElements.length;i++)\n        {\n            if(aElements[i].getAttribute(attr)==value)\n                aEle.push( aElements[i] );\n        }\n        return aEle;\n    }\n    render() {\n        return (\n            <div id='FamilySelector' className='pane'>\n                <div className='header'>Family Selector</div>\n                <Table \n                    onRow={record => {\n                        return {\n                            onClick: event => {\n                                console.log(record)\n                                let node = this.getElementByAttr('tr', 'data-row-key', record.key)[0];\n                                let nclasses = node.getAttribute('class');\n                                if(nclasses.indexOf('onSelect') == -1){ // 未选中 - 选中\n                                    node.classList.add('onSelect')\n                                    store.dispatch(action.addFamily(record.ID)) \n                                }else{                                  // 选中\n                                    if(nclasses.indexOf('onFocus') == -1){  // 选中，但未focus - focus\n                                        node.classList.add('onFocus')\n                                        store.dispatch(action.selectFamily(record.ID))\n                                    }else{\n                                        node.classList.remove('onSelect')   // 选中，且focus - 取消选中\n                                        store.dispatch(action.removeFamily(record.ID))\n                                    }\n                                }\n                            }\n                        };\n                    }}\n                    rowClassName={record => {\n                        return  store.getState().selectedFamily.indexOf(record.key) !== -1 ? 'onSelect' : '';\n                    }}\n                    dataSource={this.state.dataSource} columns={this.state.columns} size='small'\n                    pagination={{\n                        hideOnSinglePage: true,\n                        defaultPageSize: 10\n                    }}\n                />\n            </div>\n        )\n    }\n}","/Users/piny/Desktop/FDepVis/src/views/DetailInfo/index.js",["78","79","80","81","82","83","84","85"],"/Users/piny/Desktop/FDepVis/src/redux/actions.js",[],"/Users/piny/Desktop/FDepVis/src/redux/index.js",[],"/Users/piny/Desktop/FDepVis/src/redux/reducers.js",[],"/Users/piny/Desktop/FDepVis/src/redux/state.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":44,"column":32,"nodeType":"92","endLine":44,"endColumn":44},{"ruleId":"93","severity":1,"message":"94","line":55,"column":60,"nodeType":"95","messageId":"96","endLine":55,"endColumn":61},{"ruleId":"97","severity":1,"message":"98","line":85,"column":13,"nodeType":"99","messageId":"100","endLine":85,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":130,"column":26,"nodeType":"103","messageId":"104","endLine":130,"endColumn":38},{"ruleId":"97","severity":1,"message":"105","line":164,"column":15,"nodeType":"99","messageId":"100","endLine":164,"endColumn":21},{"ruleId":"97","severity":1,"message":"106","line":177,"column":15,"nodeType":"99","messageId":"100","endLine":177,"endColumn":21},{"ruleId":"97","severity":1,"message":"107","line":236,"column":13,"nodeType":"99","messageId":"100","endLine":236,"endColumn":18},{"ruleId":"97","severity":1,"message":"108","line":256,"column":13,"nodeType":"99","messageId":"100","endLine":256,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":284,"column":57,"nodeType":"95","messageId":"96","endLine":284,"endColumn":58},{"ruleId":"97","severity":1,"message":"109","line":323,"column":15,"nodeType":"99","messageId":"100","endLine":323,"endColumn":25},{"ruleId":"97","severity":1,"message":"110","line":351,"column":15,"nodeType":"99","messageId":"100","endLine":351,"endColumn":25},{"ruleId":"97","severity":1,"message":"111","line":383,"column":17,"nodeType":"99","messageId":"100","endLine":383,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":205,"column":66,"nodeType":"95","messageId":"96","endLine":205,"endColumn":67},{"ruleId":"93","severity":1,"message":"94","line":26,"column":57,"nodeType":"95","messageId":"96","endLine":26,"endColumn":58},{"ruleId":"112","severity":1,"message":"113","line":174,"column":42,"nodeType":"95","messageId":"114","endLine":174,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":225,"column":36,"nodeType":"95","messageId":"114","endLine":225,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":228,"column":37,"nodeType":"95","messageId":"114","endLine":228,"endColumn":39},{"ruleId":"97","severity":1,"message":"115","line":307,"column":15,"nodeType":"99","messageId":"100","endLine":307,"endColumn":20},{"ruleId":"97","severity":1,"message":"116","line":351,"column":15,"nodeType":"99","messageId":"100","endLine":351,"endColumn":23},{"ruleId":"97","severity":1,"message":"117","line":3,"column":17,"nodeType":"99","messageId":"100","endLine":3,"endColumn":20},{"ruleId":"97","severity":1,"message":"118","line":3,"column":22,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":50,"column":20,"nodeType":"95","messageId":"114","endLine":50,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":66,"column":47,"nodeType":"95","messageId":"114","endLine":66,"endColumn":49},{"ruleId":"112","severity":1,"message":"113","line":82,"column":65,"nodeType":"95","messageId":"114","endLine":82,"endColumn":67},{"ruleId":"112","severity":1,"message":"113","line":86,"column":68,"nodeType":"95","messageId":"114","endLine":86,"endColumn":70},{"ruleId":"97","severity":1,"message":"119","line":4,"column":20,"nodeType":"99","messageId":"100","endLine":4,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":43,"column":62,"nodeType":"95","messageId":"96","endLine":43,"endColumn":63},{"ruleId":"112","severity":1,"message":"113","line":79,"column":32,"nodeType":"95","messageId":"114","endLine":79,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":81,"column":40,"nodeType":"95","messageId":"114","endLine":81,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":91,"column":17,"nodeType":"95","messageId":"114","endLine":91,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":100,"column":33,"nodeType":"95","messageId":"114","endLine":100,"endColumn":35},{"ruleId":"112","severity":1,"message":"113","line":106,"column":40,"nodeType":"95","messageId":"114","endLine":106,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":187,"column":33,"nodeType":"92","endLine":187,"endColumn":82},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'allCount' is assigned a value but never used.","Identifier","unusedVar","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'margin' is assigned a value but never used.","'colors' is assigned a value but never used.","'xAxis' is assigned a value but never used.","'container' is assigned a value but never used.","'nameLabels' is assigned a value but never used.","'cardsEnter' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'width' is assigned a value but never used.","'segments' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'List' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]