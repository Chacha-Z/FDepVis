[{"D:\\Code\\FDepVis\\src\\index.js":"1","D:\\Code\\FDepVis\\src\\Dashboard.js":"2","D:\\Code\\FDepVis\\src\\views\\AttributesHeatmap\\index.js":"3","D:\\Code\\FDepVis\\src\\views\\FamilySelector\\index.js":"4","D:\\Code\\FDepVis\\src\\views\\FamilyTree\\index.js":"5","D:\\Code\\FDepVis\\src\\views\\ScatterPlot\\index.js":"6","D:\\Code\\FDepVis\\src\\views\\RelativeCompare\\index.js":"7","D:\\Code\\FDepVis\\src\\redux\\actions.js":"8","D:\\Code\\FDepVis\\src\\redux\\index.js":"9","D:\\Code\\FDepVis\\src\\redux\\reducers.js":"10","D:\\Code\\FDepVis\\src\\redux\\state.js":"11"},{"size":193,"mtime":1572995136000,"results":"12","hashOfConfig":"13"},{"size":1870,"mtime":1608036112876,"results":"14","hashOfConfig":"13"},{"size":6428,"mtime":1608036095339,"results":"15","hashOfConfig":"13"},{"size":2615,"mtime":1606209193359,"results":"16","hashOfConfig":"13"},{"size":21480,"mtime":1608035607525,"results":"17","hashOfConfig":"13"},{"size":6060,"mtime":1607936682492,"results":"18","hashOfConfig":"13"},{"size":6461,"mtime":1608036095360,"results":"19","hashOfConfig":"13"},{"size":286,"mtime":1606051411760,"results":"20","hashOfConfig":"13"},{"size":285,"mtime":1606035451211,"results":"21","hashOfConfig":"13"},{"size":682,"mtime":1608033467222,"results":"22","hashOfConfig":"13"},{"size":418277,"mtime":1608032491048,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jthuuv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\FDepVis\\src\\index.js",[],["50","51"],"D:\\Code\\FDepVis\\src\\Dashboard.js",["52"],"D:\\Code\\FDepVis\\src\\views\\AttributesHeatmap\\index.js",["53","54","55","56","57","58"],"D:\\Code\\FDepVis\\src\\views\\FamilySelector\\index.js",["59","60","61","62"],"import React, { Component } from 'react';\nimport './FamilySelector.css';\nimport { Table, Tag, Space } from 'antd';\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class FamilySelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            columns: [\n                {\n                    title: 'ID',\n                    dataIndex: 'ID',\n                    key: 'ID'\n                },\n                {\n                    title: 'people',\n                    dataIndex: 'people',\n                    key: 'people'\n                },\n                {\n                    title: 'SNum',\n                    dataIndex: 'SNum',\n                    key: 'SNum'\n                }\n            ]\n        };\n    }\n    componentDidMount(){\n        this.setState({\n            dataSource: store.getState().familyInfo\n        });\n    }\n\n    onRowClick(e){\n        console.log(e)\n    }\n\n    getElementByAttr(tag,attr,value){\n        var aElements=document.getElementsByTagName(tag);\n        var aEle=[];\n        for(var i=0;i<aElements.length;i++)\n        {\n            if(aElements[i].getAttribute(attr)==value)\n                aEle.push( aElements[i] );\n        }\n        return aEle;\n    }\n    render() {\n        return (\n            <div id='FamilySelector' className='pane'>\n                <div className='header'>Family Selector</div>\n                <Table \n                    onRow={record => {\n                        return {\n                            onClick: event => {\n                                console.log(record)\n                                let node = this.getElementByAttr('tr', 'data-row-key', record.key)[0];\n                                if(node.getAttribute('class').indexOf('onSelect') == -1){\n                                    node.classList.add('onSelect')\n                                    store.dispatch(action.addFamily(record.ID))\n                                }else{\n                                    node.classList.remove('onSelect')\n                                    store.dispatch(action.removeFamily(record.ID))\n                                }\n                            }\n                        };\n                    }}\n                    dataSource={this.state.dataSource} columns={this.state.columns} size='small'\n                    pagination={{\n                        hideOnSinglePage: true,\n                        defaultPageSize: 10\n                    }}\n                />;\n            </div>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\views\\FamilyTree\\index.js",["63","64","65","66","67","68","69","70","71","72","73","74"],"import React, { Component } from 'react';\nimport './FamilyTree.css';\nimport * as d3 from 'd3';\nimport store from '../../redux/index'\n\nexport default class FamilyTree extends Component {\n\n  componentDidMount(){\n    store.subscribe(()=>{\n        this.drawHor()\n    })\n    this.drawHor();\n  }\n  \n  draw(){\n    \n    const width = document.getElementById(\"FamilyTree\").clientWidth\n    const height = document.getElementById(\"FamilyTree\").clientHeight-45\n\n    var graphicOpt = {\n      width: width,\n      height: height,\n      radius: height/2,\n    }\n\n    let graphicOpt_radialC = {  //节点大小和颜色设置\n        width:14,\n        height:14,\n        color: d3.scaleOrdinal()\n            .range([\"aqua\", \"blue\", \"fuchsia\", \"gray\", \"green\", \"lime\", \"maroon\", \"navy\", \"olive\", \"orange\", \"purple\", \"red\", \"silver\", \"teal\", \"black\", \"yellow\"])\n            //.range([\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\",\"#eea60d\",\"#a9402a\",\"#845d54\",,\"#056f1f\",\"#475e4c\"])\n    }\n\n    d3.selection.prototype.moveToFront = function() {\n        return this.each(function(){\n            this.parentNode.appendChild(this);\n        });\n    };\n    let dataLists =[];\n    // 加载数据\n    loadTree(\"family149_3\",0);\n    loadTree(\"family176860_3\",1);\n    // makeKey();\n\n    function loadTree(familyName,isRight){\n      var data = store.getState()[familyName]\n      dataLists[+isRight] = {id: 'Tree'+(+isRight), data:data};\n      createHolder(dataLists)\n    }\n\n\n    // 添加SVG对象\n    function createHolder(listTree) { // [{id: family1, data: loaded from json}]\n      let holders = d3.select('#FamilyTree')\n          .selectAll('div.svgHolder')\n          .data(listTree, d=>d.id)\n          .call(updateHoders);\n      holders.exit().remove();\n      holders\n          .enter()\n          .append('div')\n          .attr('class','svgHolder')\n          .call(updateHoders);\n\n      function updateHoders(p){\n          return p.attr('id',d=>d.id)\n              .each(function(d){drawTree('#'+d.id, d.data, graphicOpt)});\n      }\n    }\n\n    function drawTree(holder, data, graphicOpt) {\n      // 定义画布维度和边界\n      var width = graphicOpt.width;\n      var height = graphicOpt.height;\n      var radius = graphicOpt.radius; // dendrogram的直径\n\n      let div = d3.select(holder);\n      let svg = div.select('svg g.content')\n          .attr(\"transform\", \"translate(\" +  (radius+50) + \",\" + radius + \")\");\n      if (svg.empty()) // no svg\n      {\n          svg = div\n              .append(\"svg\")\n              .attr(\"width\", radius*2+150)\n              .attr(\"height\", radius*2)\n              .append(\"g\")\n              .attr('class','content')\n              .attr(\"transform\", \"translate(\" +  (radius+50) + \",\" + radius + \")\");\n      }\n      svg.selectAll(\"*\").remove();\n\n      // 定义cluster(dendrogram)布局:\n      var cluster = d3.cluster()\n          .size([360, radius - 20]);  // 360指整个圆. radius-60指dendrogram周围有20个像素\n\n      // 为cluster布局绑定数据:\n      var root = d3.stratify()\n          .id(function (d) {\n              return d.name;\n          })\n          .parentId(function (d) {\n              return d.parent;\n          })\n          (data);\n\n      cluster(root);\n      console.log(cluster(root));\n\n      // 节点与节点之间链接生成器\n      var linksGenerator = d3.linkRadial()\n          .angle(function (d) {\n              return d.x / 180 * Math.PI;\n          })\n          .radius(function (d) {\n              return d.y;\n          });\n\n      // 在节点间添加链接:\n      svg.selectAll('path')\n          .data(root.links())\n          .enter()\n          .append('path')\n          .attr(\"d\", linksGenerator)\n          .style(\"fill\", 'none')\n          .attr(\"stroke\", '#ccc')\n\n\n      // 为每个节点添加圆.\n      var node = svg.selectAll(\".node\")\n          .data(root.descendants())\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", \"node\")\n          .attr(\"transform\", function (d) {\n              return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\";\n          });\n\n      //console.log(svg.selectAll(\".node\"));\n      node.selectAll('circle').data(d => {\n          let datainput=[];\n          if (d.data.group === \"individual\")\n              datainput = [{key: 'ind', data: d}];\n          else\n              datainput = [{key: 'mal', data: d}, {key: 'fem', data: d}];\n\n          return datainput.filter(person=>!d.data[person.key+'_data']);\n      }).enter()\n          .append('circle')\n          .attr(\"r\", 7)\n\n          //.style(\"fill\", \"#69b3a2\")\n          .style(\"fill\", function (d) {\n              if (d.data.data[d.key + '_suicide'] == 'Y') {\n                  return \"red\"\n              }\n              if (d.data.data[d.key + '_deceased'] == 'Y') {\n                  return \"black\"\n              } else {\n                  return \"#69b3a2\"\n              }\n\n          })\n          .attr(\"cy\", d => d.key === 'ind' ? 0 : (d.key === \"mal\" ? -8 : 8))\n          .attr(\"stroke\", \"black\")\n          .style(\"stroke-width\", .5);\n      node\n          .selectAll('g.personRadial').data(d => {\n          let datainput=[];\n          if (d.data.group === \"individual\")\n              datainput = [{key: 'ind', data: d}];\n          else\n              datainput = [{key: 'mal', data: d}, {key: 'fem', data: d}];\n\n          return datainput.filter(person=>d.data[person.key+'_data']);\n      }).enter()\n          .append('g')\n          .attr('class','personRadial')\n          .attr('transform',d=>`translate(0,${d.key === 'ind' ? 0 : (d.key === \"mal\" ? -8 : 8)})`)\n          .on('mouseover',function(){\n              d3.select(this.parentNode).moveToFront();\n              d3.select(this).select('g').attr('transform','scale(8)');\n          }).on('mouseout',function(){\n              d3.select(this).select('g').attr('transform','scale(1)');\n          })\n          .each(function(d){\n              // draw radial function\n              drawRadialChart({holder:d3.select(this),\n                  data:d.data.data[d.key+'_data'],\n                  graphicopt:graphicOpt_radialC})\n          })\n    }\n\n    function drawRadialChart({holder,data,graphicopt}) {\n      let width = graphicopt.width;\n      let height = graphicopt.height;\n      let barHeight = height / 2;\n      let color = graphicopt.color;\n      let svg = holder.append(\"g\")\n          // .attr(\"transform\", \"translate(\" + width/2 + \",\" + height/2 + \")\");\n      data = d3.entries(data);\n      var extent = d3.extent(data, function (d) {\n          return d.value;\n      });\n      var barScale = d3.scaleLinear()\n          .domain(extent)\n          .range([0, barHeight]);\n      console.log(data)\n      var keys = data.map(function (d, i) {\n          return d.key;\n      });\n      var numBars = keys.length;\n\n      var arc = d3.arc()\n          .startAngle(function (d, i) {\n              return (i * 2 * Math.PI) / numBars;\n          })\n          .endAngle(function (d, i) {\n              return ((i + 1) * 2 * Math.PI) / numBars;\n          })\n          .innerRadius(0)\n          .outerRadius(d => barScale(+d.value));\n      svg.append(\"circle\")\n          .attr(\"r\", barHeight)\n          .classed(\"outer\", true)\n          .style(\"fill\", \"white\")\n          .style(\"stroke\", \"red\")\n          .style(\"stroke-width\", 0.5);\n      var segments = svg.selectAll(\"path\")\n          .data(data)\n          .enter().append(\"path\")\n          .each(function (d) {\n              d.outerRadius = 0;\n          })\n          .style(\"fill\", function (d) {\n              return color(d.key);\n          })\n          .attr(\"d\", arc);\n\n    }\n}\n\n    drawHor(){\n        const width = document.getElementById(\"FamilyTree\").clientWidth\n        const height = document.getElementById(\"FamilyTree\").clientHeight-45\n    \n        var graphicOpt = {\n          width: width,\n          height: height,\n          margin: 20,\n        }\n    \n        let graphicOpt_radialC = {  //节点大小和颜色设置\n            width:14,\n            height:14,\n            color: d3.scaleOrdinal()\n                .range([\"aqua\", \"blue\", \"fuchsia\", \"gray\", \"green\", \"lime\", \"maroon\", \"navy\", \"olive\", \"orange\", \"purple\", \"red\", \"silver\", \"teal\", \"black\", \"yellow\"])\n                //.range([\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\",\"#eea60d\",\"#a9402a\",\"#845d54\",,\"#056f1f\",\"#475e4c\"])\n        }\n    \n        d3.selection.prototype.moveToFront = function() {\n            return this.each(function(){\n                this.parentNode.appendChild(this);\n            });\n        };\n        let dataLists =[];\n        // 加载数据\n        // loadTree(\"family149_3\",0);\n        loadTree(store.getState().focusFamily,0);\n        // makeKey();\n    \n        function loadTree(familyName,isRight){\n          var data = store.getState()[familyName]\n          dataLists[+isRight] = {id: 'Tree'+(+isRight), data:data};\n          createHolder(dataLists)\n        }\n    \n        // 添加SVG对象\n        function createHolder(listTree) { // [{id: family1, data: loaded from json}]\n          let holders = d3.select('#FamilyTree')\n              .selectAll('div.svgHolder')\n              .data(listTree, d=>d.id)\n              .call(updateHoders);\n          holders.exit().remove();\n          holders\n              .enter()\n              .append('div')\n              .attr('class','svgHolder')\n              .call(updateHoders);\n    \n          function updateHoders(p){\n              return p.attr('id',d=>d.id)\n                  .each(function(d){drawTree('#'+d.id, d.data, graphicOpt)});\n          }\n        }\n    \n        function drawTree(holder, data, graphicOpt) {\n          // 定义画布维度和边界\n          var width = graphicOpt.width;\n          var height = graphicOpt.height;\n          var margin = graphicOpt.margin; // dendrogram的直径\n          var pn = Math.floor(data.length/100) == 0?1: Math.floor(data.length/100)+1;\n          console.log(data.length, data.length/100, pn)\n          let div = d3.select(holder);\n          div.select('svg').remove()\n          var svg = div\n                    .append(\"svg\")\n                    .attr(\"width\", width*pn)\n                    .attr(\"height\", height)\n                    .append(\"g\")\n                    .attr('class','content')\n                    .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n          svg.selectAll(\"*\").remove();\n          // 定义cluster(dendrogram)布局:\n          var cluster = d3.cluster()\n            //   .size([360, radius - 20]);  // 360指整个圆. radius-60指dendrogram周围有20个像素\n              .size([width*pn-margin*2, height-margin*2]);  //  [width, height]\n    \n          // 为cluster布局绑定数据:\n          var root = d3.stratify()\n              .id(function (d) {\n                  return d.name;\n              })\n              .parentId(function (d) {\n                  return d.parent;\n              })\n              (data);\n    \n          console.log(cluster(root));\n    \n          // 节点与节点之间链接生成器\n          var linksGenerator = d3.linkHorizontal()\n                                .x(function(d) { return d.x; })\n                                .y(function(d) { return d.y; });\n    \n          // 在节点间添加链接:\n          svg.selectAll('path')\n              .data(root.links())\n              .enter()\n              .append('path')\n              .attr(\"d\", linksGenerator)\n              .style(\"fill\", 'none')\n              .attr(\"stroke\", '#ccc')\n            console.log(root.links());\n    \n    \n          // 为每个节点添加圆.\n          var node = svg.selectAll(\".node\")\n              .data(root.descendants())\n              .enter()\n              .append(\"g\")\n              .attr(\"class\", \"node\")\n              .attr(\"transform\", function (d) {\n                  return \"translate(\" + d.x +\",\"+ d.y + \")\";\n              });\n            console.log(root.descendants());\n    \n          // 为每个节点画一或两个圆，需要对原数据进行修改，将原数据拆分成一或二长度的数组，再对数组中每个数据进行操作（画圆）\n          node.selectAll('circle').data(d => {\n              let datainput=[];\n              if (d.data.group === \"individual\")\n                  datainput = [{key: 'ind', data: d}];\n              else\n                  datainput = [{key: 'mal', data: d}, {key: 'fem', data: d}];\n    \n              return datainput.filter(person=>!d.data[person.key+'_data']); // 只针对未自杀或自杀却没有临床属性数据的\n            }).enter()\n              .append('circle')\n              .attr(\"r\", 7)\n    \n              .style(\"fill\", function (d) {\n                  if (d.data.data[d.key + '_suicide'] == 'Y') { //自杀的人（却没有临床属性数据），红色\n                      return \"red\"\n                  }else if (d.data.data[d.key + '_deceased'] == 'Y') {    // 死亡的人\n                      return \"black\"\n                  } else {\n                      return \"#69b3a2\"\n                  }\n    \n              })\n              .attr(\"cx\", d => d.key === 'ind' ? 0 : (d.key === \"mal\" ? -8 : 8)) // 设置偏移量\n              .attr(\"stroke\", \"black\")\n              .style(\"stroke-width\", .5);\n\n          node  // 针对自杀且有临床属性数据的，使用饼图进行绘制\n              .selectAll('g.personRadial').data(d => {\n                let datainput=[];\n                if (d.data.group === \"individual\")\n                    datainput = [{key: 'ind', data: d}];\n                else\n                    datainput = [{key: 'mal', data: d}, {key: 'fem', data: d}];\n        \n                return datainput.filter(person=>d.data[person.key+'_data']);\n              }).enter()\n                .append('g')\n                .attr('class','personRadial')\n                .attr('transform',d=>`translate(${d.key === 'ind' ? 0 : (d.key === \"mal\" ? -8 : 8)},0)`)\n                .on('mouseover',function(){\n                    d3.select(this.parentNode).moveToFront();\n                    d3.select(this).select('g').attr('transform','scale(8)');\n                }).on('mouseout',function(){\n                    d3.select(this).select('g').attr('transform','scale(1)');\n                })\n                .each(function(d){\n                    // 画饼图\n                    drawRadialChart({holder: d3.select(this),    //在该遍历数据及元素上绘制\n                                     data: d.data.data[d.key+'_data'],\n                                     graphicopt: graphicOpt_radialC})\n                })\n              }\n    \n        function drawRadialChart({holder, data, graphicopt}) {\n          let width = graphicopt.width;\n          let height = graphicopt.height;\n          let barHeight = height / 2;\n          let color = graphicopt.color;\n          let svg = holder.append(\"g\")\n              // .attr(\"transform\", \"translate(\" + width/2 + \",\" + height/2 + \")\");\n\n          data = d3.pie().value(d=>d.value)(d3.entries(data));\n    \n          var arc = d3.arc()\n              .innerRadius(0)\n              .outerRadius(barHeight);\n\n          svg.append(\"circle\")\n              .attr(\"r\", barHeight)\n              .classed(\"outer\", true)\n              .style(\"fill\", \"white\")\n              .style(\"stroke\", \"red\")\n              .style(\"stroke-width\", 0.5);\n\n          var segments = svg.selectAll(\"path\")\n              .data(data)\n              .enter().append(\"path\")\n              .style(\"fill\", function (d) {\n                  return color(d.data.key);\n              })\n              .attr(\"d\", arc);\n    \n    }\n\n    function makeKey(){\n      var key1 = d3.select(\"svg\")\n          .append(\"g\");\n      key1.append(\"circle\")\n          .attr(\"cx\", 20)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"aqua\")\n      key1.append(\"text\")\n          .attr(\"dx\", 38)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Alcohol\");\n      var key2 = d3.select(\"svg\")\n          .append(\"g\");\n      key2.append(\"circle\")\n          .attr(\"cx\", 110)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"blue\")\n      key2.append(\"text\")\n          .attr(\"dx\", 128)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Psychosis\");\n      var key3 = d3.select(\"svg\")\n          .append(\"g\");\n      key3.append(\"circle\")\n          .attr(\"cx\", 210)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"fuchsia\")\n      key3.append(\"text\")\n          .attr(\"dx\", 228)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Anxiety-non-trauma\");\n      var key4 = d3.select(\"svg\")\n          .append(\"g\");\n      key4.append(\"circle\")\n          .attr(\"cx\", 370)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"gray\")\n      key4.append(\"text\")\n          .attr(\"dx\", 388)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Somatic disorder\");\n      var key5 = d3.select(\"svg\")\n          .append(\"g\");\n      key5.append(\"circle\")\n          .attr(\"cx\", 510)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"green\")\n      key5.append(\"text\")\n          .attr(\"dx\", 528)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Bipolar spectrum illness\");\n      var key6 = d3.select(\"svg\")\n          .append(\"g\");\n      key6.append(\"circle\")\n          .attr(\"cx\", 695)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"lime\")\n      key6.append(\"text\")\n          .attr(\"dx\", 713)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Depression\");\n      var key7 = d3.select(\"svg\")\n          .append(\"g\");\n      key7.append(\"circle\")\n          .attr(\"cx\", 805)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"maroon\")\n      key7.append(\"text\")\n          .attr(\"dx\", 823)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"Interpersonal trauma\");\n      var key8 = d3.select(\"svg\")\n          .append(\"g\");\n      key8.append(\"circle\")\n          .attr(\"cx\", 965)\n          .attr(\"cy\", 20)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"navy\")\n      key8.append(\"text\")\n          .attr(\"dx\", 983)\n          .attr(\"dy\", 24)\n          .style(\"font-size\", \"14px\")\n          .text(\"PD-Cluster C-anxiety\");\n      var key9 = d3.select(\"svg\")\n          .append(\"g\");\n      key9.append(\"circle\")\n          .attr(\"cx\", 20)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"olive\")\n      key9.append(\"text\")\n          .attr(\"dx\", 38)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"PD-Cluster B-emotional\");\n      var key10 = d3.select(\"svg\")\n          .append(\"g\");\n      key10.append(\"circle\")\n          .attr(\"cx\", 200)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"orange\")\n      key10.append(\"text\")\n          .attr(\"dx\", 218)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"PD\");\n      var key11 = d3.select(\"svg\")\n          .append(\"g\");\n      key11.append(\"circle\")\n          .attr(\"cx\", 265)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"purple\")\n      key11.append(\"text\")\n          .attr(\"dx\", 283)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"Impulse control disorder\");\n      var key12 = d3.select(\"svg\")\n          .append(\"g\");\n      key12.append(\"circle\")\n          .attr(\"cx\", 450)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"red\")\n      key12.append(\"text\")\n          .attr(\"dx\", 468)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"Obesity\");\n      var key13 = d3.select(\"svg\")\n          .append(\"g\");\n      key13.append(\"circle\")\n          .attr(\"cx\", 540)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"silver\")\n      key13.append(\"text\")\n          .attr(\"dx\", 558)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"Cardiovascular\");\n      var key14 = d3.select(\"svg\")\n          .append(\"g\");\n      key14.append(\"circle\")\n          .attr(\"cx\", 675)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"teal\")\n      key14.append(\"text\")\n          .attr(\"dx\", 693)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"COPD\");\n      var key15 = d3.select(\"svg\")\n          .append(\"g\");\n      key15.append(\"circle\")\n          .attr(\"cx\", 755)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"black\")\n      key15.append(\"text\")\n          .attr(\"dx\", 773)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"Asthma\");\n      var key16 = d3.select(\"svg\")\n          .append(\"g\");\n      key16.append(\"circle\")\n          .attr(\"cx\", 840)\n          .attr(\"cy\", 60)\n          .attr(\"r\", 15)\n          .style(\"fill\", \"yellow\")\n      key16.append(\"text\")\n          .attr(\"dx\", 858)\n          .attr(\"dy\", 64)\n          .style(\"font-size\", \"14px\")\n          .text(\"Immune-autoimmune\");\n    }\n    \n  }\n\n\n    render() {\n        return (\n            <div id='FamilyTree' className='pane' >\n                <div className='header'>Family Tree</div>\n            </div>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\views\\ScatterPlot\\index.js",["75"],"import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './ScatterPlot.css';\n\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class ScatterPlot extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            data: [\n                [11,27,2],\n                [98,21,2],\n                [17,40,3],\n                [43,21,3],\n                [61,1,3],\n                [2,66,1],\n                [92,52,2],\n                [41,93,1],\n                [54,59,1],\n                [12,4,1],\n                [82,90,1],\n                [90,18,1],\n                [77,54,3],\n                [60,21,1],\n                [73,47,2],\n                [64,73,1],\n                [24,30,3],\n                [42,86,2],\n                [63,35,3],\n                [27,29,1],\n                [5,87,2],\n                [89,55,2],\n                [100,24,3],\n                [76,93,3],\n                [13,1,2],\n                [99,39,3],\n                [66,96,2],\n                [41,72,1],\n                [33,28,2],\n                [1,16,2],\n                [35,19,2],\n                [48,56,1],\n                [72,2,3],\n                [96,17,1],\n                [86,19,1],\n                [20,7,1],\n                [77,39,3],\n                [15,84,2],\n                [40,51,1],\n                [25,23,2],\n                [8,51,2],\n                [31,84,3],\n                [85,1,3],\n                [100,93,2],\n                [94,85,2],\n                [100,67,1],\n                [64,93,3],\n                [44,71,1],\n                [1,80,3],\n                [50,2,3],\n                [45,87,2],\n                [60,3,1],\n                [14,60,2],\n                [22,91,3],\n                [4,59,2],\n                [100,95,2],\n                [25,38,2],\n                [71,44,2],\n                [89,10,3],\n                [38,46,2],\n                [4,38,1],\n                [78,98,3],\n                [59,92,3],\n                [91,2,1],\n                [37,27,3],\n                [45,15,2],\n                [90,90,3],\n                [77,45,2],\n                [88,20,3],\n                [19,84,2],\n                [78,46,3],\n                [68,39,3],\n                [76,32,2],\n                [69,42,1],\n                [81,71,1],\n                [65,71,1],\n                [68,96,2],\n                [3,97,1],\n                [46,56,2],\n                [47,83,2],\n                [56,87,3],\n                [8,95,1],\n                [11,42,1],\n                [13,6,3],\n                [26,81,2],\n                [1,89,2],\n                [23,64,2],\n                [71,81,1],\n                [64,28,1],\n                [87,94,2],\n                [62,20,1],\n                [53,40,1],\n                [70,18,2],\n                [78,27,2],\n                [51,96,2],\n                [83,68,1],\n                [54,10,3],\n                [24,41,3],\n                [90,4,1],\n                [56,45,1]\n            ]\n        }\n    }\n\n    componentDidMount(){\n        store.subscribe(()=>{\n            this.drawChart()\n        })\n        this.drawChart();\n    }\n    drawChart() {\n        d3.select(\"#ScatterPlot svg\").remove()\n        const points = this.state.data\n        const margin = 20\n        const marginRight = 90  // 定义右边距\n        const width = document.getElementById(\"ScatterPlot\").clientWidth\n        const height = document.getElementById(\"ScatterPlot\").clientHeight - 30\n        const innerWidth = width - margin - marginRight\n        const innerHeight = height - margin*2\n\n        const svg = d3.select(\"#ScatterPlot\")\n                        .append(\"svg\")\n                        .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n                        .attr(\"viewBox\", \"0 0 \" + width +\" \"+ height)\n\n        let x = d3.scaleLinear()\n            .domain([0, Math.max(...points.map(x => x[0]))])\n            .range([0, innerWidth])\n\n        let y = d3.scaleLinear()\n            .rangeRound([0, innerHeight])\n            .domain([Math.max(...points.map(x => x[1])), 0])\n\n        let z = d3.scaleOrdinal(d3.schemeCategory10) // 通用线条的颜色\n\n        let fig = svg.append('g')\n            .attr('transform', 'translate(' + 10 + ',' + 10 + ')')\n\n        fig.append('g') // 输出点\n            .selectAll('circle')\n            // .attr('class', 'points')\n            .data(points)\n            .enter()\n            .append('circle')\n            .attr('cursor', 'pointer')\n            // .on('mouseover', tip.show)\n            // .on('mouseout', tip.hide)\n            .attr('fill', function(d) {\n                return z(d[2])\n            })\n            .attr('cx', function(d) {\n                return x(d[0])\n            })\n            .attr('cy', function(d) {\n                return y(d[1])\n            })\n            .attr('r', 6)\n            .style('opacity',\"0.6\")\n       \n        let legend = fig\n            .append('g') // 画legend\n            .attr('font-family', 'Arial')\n            .attr('font-size', \"12px\")\n            .attr(\"font-weight\",\"500\")\n            .attr('transform', `translate(${innerWidth+margin/2},0)`)\n            .attr('text-anchor', 'start')\n            .selectAll('g')\n            .data(store.getState().selectedFamily)\n            .enter()\n            .append('g')\n            .attr('transform', function(d, i) {\n                return 'translate(0,' + i * 30 + ')'\n            })\n\n        legend\n            .append('rect')\n            .attr('x', 0)\n            .attr('rx', 4)\n            .attr('width', 15)\n            .attr('height', 15)\n            .attr('fill', (d, i)=>z(i+1))\n            .style(\"opacity\",\"0.7\")\n\n        legend\n            .append('text')\n            .attr('x', 15+3)\n            .attr('dy', 13)\n            .text(function(d) {\n                return \"F\" + d\n            })\n\n    }\n    render() {\n\n        return (\n            <div id='ScatterPlot' className='pane'>\n                <div className='header'>Scatter Plot</div>\n            </div>\n        )\n    }\n}\n","D:\\Code\\FDepVis\\src\\views\\RelativeCompare\\index.js",["76","77","78"],"D:\\Code\\FDepVis\\src\\redux\\actions.js",[],"D:\\Code\\FDepVis\\src\\redux\\index.js",[],"D:\\Code\\FDepVis\\src\\redux\\reducers.js",[],"D:\\Code\\FDepVis\\src\\redux\\state.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":44,"column":32,"nodeType":"85","endLine":44,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":87,"column":15,"nodeType":"88","messageId":"89","endLine":87,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":92,"column":15,"nodeType":"88","messageId":"89","endLine":92,"endColumn":20},{"ruleId":"86","severity":1,"message":"91","line":119,"column":15,"nodeType":"88","messageId":"89","endLine":119,"endColumn":25},{"ruleId":"86","severity":1,"message":"92","line":129,"column":15,"nodeType":"88","messageId":"89","endLine":129,"endColumn":25},{"ruleId":"86","severity":1,"message":"93","line":148,"column":15,"nodeType":"88","messageId":"89","endLine":148,"endColumn":25},{"ruleId":"86","severity":1,"message":"94","line":171,"column":17,"nodeType":"88","messageId":"89","endLine":171,"endColumn":21},{"ruleId":"86","severity":1,"message":"95","line":3,"column":17,"nodeType":"88","messageId":"89","endLine":3,"endColumn":20},{"ruleId":"86","severity":1,"message":"96","line":3,"column":22,"nodeType":"88","messageId":"89","endLine":3,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":48,"column":47,"nodeType":"99","messageId":"100","endLine":48,"endColumn":49},{"ruleId":"97","severity":1,"message":"98","line":63,"column":83,"nodeType":"99","messageId":"100","endLine":63,"endColumn":85},{"ruleId":"86","severity":1,"message":"101","line":73,"column":11,"nodeType":"88","messageId":"89","endLine":73,"endColumn":16},{"ruleId":"86","severity":1,"message":"102","line":74,"column":11,"nodeType":"88","messageId":"89","endLine":74,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":153,"column":51,"nodeType":"99","messageId":"100","endLine":153,"endColumn":53},{"ruleId":"97","severity":1,"message":"98","line":156,"column":52,"nodeType":"99","messageId":"100","endLine":156,"endColumn":54},{"ruleId":"86","severity":1,"message":"101","line":194,"column":11,"nodeType":"88","messageId":"89","endLine":194,"endColumn":16},{"ruleId":"86","severity":1,"message":"103","line":228,"column":11,"nodeType":"88","messageId":"89","endLine":228,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":301,"column":48,"nodeType":"99","messageId":"100","endLine":301,"endColumn":50},{"ruleId":"97","severity":1,"message":"98","line":371,"column":55,"nodeType":"99","messageId":"100","endLine":371,"endColumn":57},{"ruleId":"97","severity":1,"message":"98","line":373,"column":62,"nodeType":"99","messageId":"100","endLine":373,"endColumn":64},{"ruleId":"86","severity":1,"message":"101","line":412,"column":15,"nodeType":"88","messageId":"89","endLine":412,"endColumn":20},{"ruleId":"86","severity":1,"message":"103","line":432,"column":15,"nodeType":"88","messageId":"89","endLine":432,"endColumn":23},{"ruleId":"86","severity":1,"message":"104","line":442,"column":14,"nodeType":"88","messageId":"89","endLine":442,"endColumn":21},{"ruleId":"86","severity":1,"message":"105","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":93,"column":21,"nodeType":"99","messageId":"100","endLine":93,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":158,"column":38,"nodeType":"99","messageId":"100","endLine":158,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":165,"column":38,"nodeType":"99","messageId":"100","endLine":165,"endColumn":40},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'xAxis' is assigned a value but never used.","Identifier","unusedVar","'yAxis' is assigned a value but never used.","'nameLabels' is assigned a value but never used.","'attrLabels' is assigned a value but never used.","'cardsEnter' is assigned a value but never used.","'data' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'segments' is assigned a value but never used.","'makeKey' is defined but never used.","'action' is defined but never used.","no-global-assign","no-unsafe-negation"]