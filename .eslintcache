[{"D:\\Code\\FDepVis\\src\\index.js":"1","D:\\Code\\FDepVis\\src\\Dashboard.js":"2","D:\\Code\\FDepVis\\src\\views\\FamilyTree\\index.js":"3","D:\\Code\\FDepVis\\src\\views\\ScatterPlot\\index.js":"4","D:\\Code\\FDepVis\\src\\views\\FamilySelector\\index.js":"5","D:\\Code\\FDepVis\\src\\views\\AttributesHeatmap\\index.js":"6","D:\\Code\\FDepVis\\src\\views\\DetailInfo\\index.js":"7","D:\\Code\\FDepVis\\src\\redux\\index.js":"8","D:\\Code\\FDepVis\\src\\redux\\actions.js":"9","D:\\Code\\FDepVis\\src\\redux\\reducers.js":"10","D:\\Code\\FDepVis\\src\\redux\\state.js":"11"},{"size":193,"mtime":1572995136000,"results":"12","hashOfConfig":"13"},{"size":1962,"mtime":1609118392372,"results":"14","hashOfConfig":"13"},{"size":16256,"mtime":1609144650335,"results":"15","hashOfConfig":"13"},{"size":8721,"mtime":1609124161908,"results":"16","hashOfConfig":"13"},{"size":3888,"mtime":1608994327503,"results":"17","hashOfConfig":"13"},{"size":10826,"mtime":1609124230257,"results":"18","hashOfConfig":"13"},{"size":8300,"mtime":1609073122487,"results":"19","hashOfConfig":"13"},{"size":285,"mtime":1606035451211,"results":"20","hashOfConfig":"13"},{"size":534,"mtime":1608988664138,"results":"21","hashOfConfig":"13"},{"size":1289,"mtime":1608994797015,"results":"22","hashOfConfig":"13"},{"size":1247,"mtime":1609119712947,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jthuuv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Code\\FDepVis\\src\\index.js",[],["52","53"],"D:\\Code\\FDepVis\\src\\Dashboard.js",["54"],"import React, {\n  Component\n} from 'react';\nimport {\n  Row,\n  Col\n} from 'antd';\nimport ScatterPlot from './views/ScatterPlot';\nimport FamilySelector from './views/FamilySelector';\nimport FamilyTree from './views/FamilyTree';\nimport AttributesHeatmap from './views/AttributesHeatmap';\nimport DetailInfo from './views/DetailInfo';\nimport './dashboard.css';\n\n\nexport default class Dashboard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    return ( <\n      div >\n      <Row style = {\n        {\n          height: '95vh'\n        }\n      } >\n      <Col span = {\n        6\n      }\n      style = {\n        {\n          height: '100%'\n        }\n      } >\n      <Row style = {\n        {\n          height: '40%'\n        }\n      } >\n      <\n      ScatterPlot / >\n      </Row> \n      <Row style = {\n        {\n          height: '60%'\n        }\n      } >\n      <\n      FamilySelector / >\n      </Row> </Col> \n      <Col span = {\n        18\n      }\n      style = {\n        {\n          height: '100%'\n        }\n      } >\n      <Row style = {\n        {\n          height: '60%'\n        }\n      } >\n      <FamilyTree / >\n      </Row> \n      <Row style = {\n        {\n          height: '40%'\n        }\n      } >\n      <Col span = {\n        13\n      }\n      style = {\n        {\n          height: '100%',\n          backgroundColor: \"#FFF\"\n        }\n      } > < AttributesHeatmap / > </Col> <\n      Col span = {\n        11\n      }\n      style = {\n        {\n          height: '100%'\n        }\n      } > < DetailInfo / > </Col> \n      </Row> </Col> \n      </Row> \n      <Row style = {\n        {\n          height: '5vh'\n        }\n      }\n      id = 'footer' >\n      <div style = {\n        {\n          textAlign: \"center\"\n        }\n      }>\n      Source Code < a href = 'https://github.com/Chacha-Z/FDepVis' > https: //github.com/Chacha-Z/FDepVis</a>;\n      Author < a href = '#' > 我来取个名 </a>; </div> </Row> </div>\n    )\n  }\n}","D:\\Code\\FDepVis\\src\\views\\FamilyTree\\index.js",["55","56","57","58","59","60","61","62","63"],"D:\\Code\\FDepVis\\src\\views\\ScatterPlot\\index.js",["64","65"],"import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './ScatterPlot.css';\nimport axios from 'axios';\n\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class ScatterPlot extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            data: [\n                [11,27,2],\n                [98,21,2],\n                [17,40,3],\n                [43,21,3],\n                [61,1,3],\n                [2,66,1],\n                [92,52,2],\n                [41,93,1],\n                [54,59,1],\n                [12,4,1],\n                [82,90,1],\n                [90,18,1],\n                [77,54,3],\n                [60,21,1],\n                [73,47,2],\n                [64,73,1],\n                [24,30,3],\n                [42,86,2],\n                [63,35,3],\n                [27,29,1],\n                [5,87,2],\n                [89,55,2],\n                [100,24,3],\n                [76,93,3],\n                [13,1,2],\n                [99,39,3],\n                [66,96,2],\n                [41,72,1],\n                [33,28,2],\n                [1,16,2],\n                [35,19,2],\n                [48,56,1],\n                [72,2,3],\n                [96,17,1],\n                [86,19,1],\n                [20,7,1],\n                [77,39,3],\n                [15,84,2],\n                [40,51,1],\n                [25,23,2],\n                [8,51,2],\n                [31,84,3],\n                [85,1,3],\n                [100,93,2],\n                [94,85,2],\n                [100,67,1],\n                [64,93,3],\n                [44,71,1],\n                [1,80,3],\n                [50,2,3],\n                [45,87,2],\n                [60,3,1],\n                [14,60,2],\n                [22,91,3],\n                [4,59,2],\n                [100,95,2],\n                [25,38,2],\n                [71,44,2],\n                [89,10,3],\n                [38,46,2],\n                [4,38,1],\n                [78,98,3],\n                [59,92,3],\n                [91,2,1],\n                [37,27,3],\n                [45,15,2],\n                [90,90,3],\n                [77,45,2],\n                [88,20,3],\n                [19,84,2],\n                [78,46,3],\n                [68,39,3],\n                [76,32,2],\n                [69,42,1],\n                [81,71,1],\n                [65,71,1],\n                [68,96,2],\n                [3,97,1],\n                [46,56,2],\n                [47,83,2],\n                [56,87,3],\n                [8,95,1],\n                [11,42,1],\n                [13,6,3],\n                [26,81,2],\n                [1,89,2],\n                [23,64,2],\n                [71,81,1],\n                [64,28,1],\n                [87,94,2],\n                [62,20,1],\n                [53,40,1],\n                [70,18,2],\n                [78,27,2],\n                [51,96,2],\n                [83,68,1],\n                [54,10,3],\n                [24,41,3],\n                [90,4,1],\n                [56,45,1]\n            ]\n        }\n    }\n\n    componentDidMount(){\n        store.subscribe(()=>{\n            this.drawChart()\n        })\n        this.uploadData()\n    }\n    \n    uploadData() {\n        const _this = this;\n        axios.get(\"http://106.52.126.175/api/getTsneview/\"\n        ).then((res) => {\n            // console.log(res);\n            let data = res.data;\n\n            _this.setState(\n                {\n                    data: data\n                }, () => {\n                    // console.log(this.state);\n                    _this.drawChart();\n                })\n        })\n    }\n    drawChart() {\n        var selectedF = store.getState().selectedFamily;\n        d3.select(\"#ScatterPlot svg\").remove()\n        const points = this.state.data.filter(d=>selectedF.indexOf(d.fid) !== -1)\n        const margin = 20\n        const marginRight = 90  // 定义右边距\n        const width = document.getElementById(\"ScatterPlot\").clientWidth\n        const height = document.getElementById(\"ScatterPlot\").clientHeight - 30\n        const innerWidth = width - margin - marginRight\n        const innerHeight = height - margin*2\n\n        const svg = d3.select(\"#ScatterPlot\")\n                        .append(\"svg\")\n                        .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n                        .attr(\"viewBox\", \"0 0 \" + width +\" \"+ height)\n\n        let x = d3.scaleLinear()\n            .domain([0, Math.max(...points.map(d => d.x))])\n            .range([0, innerWidth])\n\n        let y = d3.scaleLinear()\n            .rangeRound([0, innerHeight])\n            .domain([Math.max(...points.map(d => d.y)), 0])\n\n        let z = d3.scaleOrdinal()\n                .domain([\"38\", \"149\", \"27251\", \"42623\", \"68939\", \"176860\", \"603481\", \"791533\", \"903988\"])\n                .range(['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6'])\n\n        let fig = svg.append('g')\n            .attr('transform', 'translate(' + 10 + ',' + 10 + ')')\n        let focusPerson = store.getState().focusPID\n        // console.log('focusPerson', focusPerson)\n\n        let $tooltip = d3.select('.plot-tooltip')\n        fig.append('g') // 输出点\n            .selectAll('circle')\n            // .attr('class', 'points')\n            .data(points)\n            .enter()\n            .append('circle')\n            .attr('cursor', 'pointer')\n            .attr('stroke', d=>d.pid == focusPerson? 'black': z(d.fid))\n            .attr('stroke-width', '1')\n            .attr('fill', function(d) {\n                return z(d.fid)\n            })\n            .attr('cx', function(d) {\n                return x(d.x)\n            })\n            .attr('cy', function(d) {\n                return y(d.y)\n            })\n            .attr('r', 6)\n            .style('opacity',\"0.6\")\n            .on('mouseover', function(d){\n                d3.select(this)\n                    .style('opacity', 1)\n\n                $tooltip.transition()\n                    .duration(100)\n                    .style('opacity', .7)\n\n                let coordinates = d3.mouse(this);\n                $tooltip.html( 'Family ID:  ' + d.fid + '<br/>'  + 'Persion ID: ' + d.pid)\n                    .style('left', (coordinates[0]+10)+'px')\n                    .style('top', (coordinates[1])+'px')\n            })\t\n            .on(\"mouseout\", function(d) {\n                d3.select(this)\n                    .style('opacity', 0.6)\n                \n                $tooltip.transition()\t\t\n                        .duration(200)\t\t\n                        .style(\"opacity\", 0);\t\n            })\n            .on('click', function(d){\n                store.dispatch(action.selectFamily(d.fid))\n                store.dispatch(action.selectPerson(d.pid))\n            })\n       \n        let legend = fig\n            .append('g') // 画legend\n            .attr('font-family', 'Arial')\n            .attr('font-size', \"12px\")\n            .attr(\"font-weight\",\"500\")\n            .attr('transform', `translate(${innerWidth+(margin/2)+10},0)`)\n            .attr('text-anchor', 'start')\n            .selectAll('g')\n            .data(store.getState().selectedFamily)\n            .enter()\n            .append('g')\n            .attr('transform', function(d, i) {\n                return 'translate(0,' + i * 25 + ')'\n            })\n            .on('click', d=>{\n                store.dispatch(action.selectFamily(d))\n            })\n            .attr('cursor', 'pointer')\n        \n        \n        var focusFamily = store.getState().focusFamily;\n        legend.each(function(d){\n            if(d === focusFamily){\n                d3.select(this)\n                    .append('rect')\n                    .style(\"fill\", '#bbb')\n                    .attr('width', 75)\n                    .attr('height', 20)\n                    .style(\"opacity\", '0.7')\n                    .attr('rx', 5)\n                    .attr('x', -5)\n                    .attr('y', -4)\n                    .style(\"stroke-width\", 0.5);\n            }\n        })\n        legend\n            .append('circle')\n            .attr('r', 6)\n            .attr('cx', 6)\n            .attr('cy', 6)\n            .attr('fill', z)\n            .style(\"opacity\", d=>d === focusFamily? '1': '0.7')\n\n        legend\n            .append('text')\n            .attr('x', 18)\n            .attr('dy', 10)\n            .text(function(d) {\n                return \"F\" + d\n            })\n            .attr('fill', d=> d === focusFamily? '#fff': '#000')\n\n    }\n    render() {\n\n        return (\n            <div id='ScatterPlot' className='pane'>\n                <div className='header'>Scatter Plot</div>\n                <div class='plot-tooltip'></div>\n            </div>\n        )\n    }\n}\n","D:\\Code\\FDepVis\\src\\views\\FamilySelector\\index.js",["66","67","68","69","70","71"],"import React, { Component } from 'react';\nimport './FamilySelector.css';\nimport { Table, Tag, Space } from 'antd';\n// 使用redux\nimport store from '../../redux/index'\nimport action from '../../redux/actions'\n\nexport default class FamilySelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            columns: [\n                {\n                    title: 'ID',\n                    dataIndex: 'ID',\n                    key: 'ID'\n                },\n                {\n                    title: 'people',\n                    dataIndex: 'people',\n                    key: 'people'\n                },\n                {\n                    title: 'SNum',\n                    dataIndex: 'SNum',\n                    key: 'SNum'\n                }\n            ]\n        };\n    }\n    componentDidMount(){\n        this.setState({\n            dataSource: store.getState().familyInfo\n        }, ()=>{\n            this.setFocus();\n        });\n        store.subscribe(()=>{\n            this.setFocus();\n        })\n    }\n\n    setFocus(){\n        let focusFamily = store.getState().focusFamily;\n        let nodes = document.getElementsByClassName('ant-table-row');\n        console.log(nodes)\n        for(var i = 0; i < nodes.length; i++){\n            let key = nodes[i].getAttribute('data-row-key')\n            if(key == focusFamily){\n                nodes[i].classList.add('onFocus')\n            }else{\n                nodes[i].classList.remove('onFocus')\n            }\n        }\n    }\n    onRowClick(e){\n        console.log(e)\n    }\n\n    getElementByAttr(tag,attr,value){\n        var aElements=document.getElementsByTagName(tag);\n        var aEle=[];\n        for(var i=0;i<aElements.length;i++)\n        {\n            if(aElements[i].getAttribute(attr)==value)\n                aEle.push( aElements[i] );\n        }\n        return aEle;\n    }\n    render() {\n        return (\n            <div id='FamilySelector' className='pane'>\n                <div className='header'>Family Selector</div>\n                <Table \n                    onRow={record => {\n                        return {\n                            onClick: event => {\n                                console.log(record)\n                                let node = this.getElementByAttr('tr', 'data-row-key', record.key)[0];\n                                let nclasses = node.getAttribute('class');\n                                if(nclasses.indexOf('onSelect') == -1){ // 未选中 - 选中\n                                    node.classList.add('onSelect')\n                                    store.dispatch(action.addFamily(record.ID)) \n                                }else{                                  // 选中\n                                    if(nclasses.indexOf('onFocus') == -1){  // 选中，但未focus - focus\n                                        node.classList.add('onFocus')\n                                        store.dispatch(action.selectFamily(record.ID))\n                                    }else{\n                                        node.classList.remove('onSelect')   // 选中，且focus - 取消选中\n                                        store.dispatch(action.removeFamily(record.ID))\n                                    }\n                                }\n                            }\n                        };\n                    }}\n                    rowClassName={record => {\n                        return  store.getState().selectedFamily.indexOf(record.key) !== -1 ? 'onSelect' : '';\n                    }}\n                    dataSource={this.state.dataSource} columns={this.state.columns} size='small'\n                    pagination={{\n                        hideOnSinglePage: true,\n                        defaultPageSize: 10\n                    }}\n                />\n            </div>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\views\\AttributesHeatmap\\index.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, {\n  Component\n} from 'react';\nimport * as d3 from \"d3\";\nimport './AttributesHeatmap.css';\nimport store from '../../redux/index';\nimport axios from 'axios';\nimport action from '../../redux/actions'\n\nexport default class AttributesHeatmap extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      names: [\"m0\", \"m1\", \"m2\", \"m3\", \"m4\"], //家族人名\n      attrs: [\"alcohol\", \"psychosis\", \"anxiety-non-trauma\", \"somatic disorder\", \"eating\", \"bipolar spectrum illness\", \"depression\", \"interpersonal trauma\", \"PD-Cluster C-anxiety\", \"PD-Cluster B-emotional\", \"PD\", \"Impulse control disorder\", \"obesity\", \"cardiovascular\", \"COPD\", \"asthma\", \"immune-autoimmune\"], //临床属性 17个\n\n      attrsmap: {\n        \"alcohol\": 0,\n        \"psychosis\": 1,\n        \"anxiety-non-trauma\": 2,\n        \"somatic disorder\": 3,\n        \"eating\": 4,\n        \"bipolar spectrum illness\": 5,\n        \"depression\": 6,\n        \"interpersonal trauma\": 7,\n        \"PD-Cluster C-anxiety\": 8,\n        \"PD-Cluster B-emotional\": 9,\n        \"PD\": 10,\n        \"Impulse control disorder\": 11,\n        \"obesity\": 12,\n        \"cardiovascular\": 13,\n        \"COPD\": 14,\n        \"asthma\": 15,\n        \"immune-autoimmune\": 16\n      }, //临床属性17个键值对\n\n\n      allTimes: [1, 2, 4],\n\n      values: []\n    }\n\n  }\n\n  componentDidMount() {\n    store.subscribe(() => {\n      this.uploadData()\n    })\n    this.uploadData();\n\n  }\n\n  uploadData() {\n    const focusFamily = store.getState().focusFamily\n    axios.get(\"http://106.52.126.175/api/getAttrview/\" + '?fid=' + focusFamily).then((res) => {\n      let data = res.data;\n      // console.log(\"attr\", data)\n      this.setData(data)\n      document.getElementById(\"BarChart\").innerHTML = ''\n      document.getElementById(\"Heatmap\").innerHTML = ''\n      this.drawChart()\n    })\n  }\n\n  setData(data) {\n    // console.log(data)\n    let row = 0;\n    let myData = []\n    let allCount = []\n    let names = []\n\n\n    for (let i = 0; i < data.length; i++) {\n\n      let objNum = Object.values(data[i]).filter((value) => {\n        return typeof value === 'number';\n      });\n      objNum = objNum.slice(2)\n      //求数组值的和\n      let count = objNum.reduce((a, b) => a + b, 0)\n      if (count !== 0) {\n        names.push(data[i].pid)\n        let j = -2; // 除去前面2个id属性\n        for (let key in data[i]) {\n          //  console.log(key,data[i][key],j) // 每个小格子\n          if (j >= 0) {\n            myData.push({\n              row: row,\n              col: j,\n              times: data[i][key]\n            })\n          }\n          j++;\n        }\n        row++;\n      }\n    }\n\n    let data_count\n    // 柱状图统计\n    if (data.length) {\n      let data_keys = Object.keys(data[0]).filter(item => [\"pid\", \"fid\"].indexOf(item) < 0) //对象键映射\n      data_count = new Object()\n      data_keys.forEach(e => {\n        data_count[e] = data.map(item => {\n          return item[e]\n        }).reduce((a, b) => a + b, 0) //求和，初值0\n      });\n\n    }\n    // console.log(data_count)\n\n    let allTimes = Object.values(data_count).map(value => value) //对象的值映射，对象变数组\n    // console.log(allTimes) //\n\n    this.setState({\n      values: myData,\n      names: names,\n      allTimes: allTimes,\n    })\n  }\n\n  drawChart() {\n\n    // console.log(this.state.values)\n    const _this = this;\n    const width = document.getElementById(\"AttributesHeatmap\").clientWidth\n    // const height = document.getElementById(\"AttributesHeatmap\").clientHeight - 30\n\n\n    const gridSize = width * 0.87 / 17 //width\n    // const gridHeight = Math.floor(height / this.state.names.length) //格子高度\n\n    const height = this.state.names.length * gridSize + 20;\n    const height1 = document.getElementById(\"AttributesHeatmap\").clientHeight * 0.18\n\n    const margin = {\n      top: 5,\n      bottom: 10,\n      left: 10,\n      right: 10\n    }\n\n    //let maxTimes = Math.max.apply(Math,this.state.allTimes.map(item => {return item.times}))\n\n    let times = this.state.values.map(item => {\n      return item.times\n    })\n    // console.log(d3.max(times))\n\n    //颜色\n    const color = d3.scaleLinear()\n      .domain([0, d3.max(times)])\n      //.domain([0, 4])\n      .range(['white', \"#2171b5\"])\n\n    const colors = [\"#8dd3c7\", \"#ffffb3\", \"#bebada\", \"#fb8072\", \"#80b1d3\", \"#fdb462\", \"#b3de69\", \"#fccde5\", \"#d9d9d9\", \"#bc80bd\", \"#ccebc5\", \"#ffed6f\", \"#eea60d\", \"#a9402a\", \"#845d54\", \"#056f1f\", \"#475e4c\"]\n\n\n\n    /* ----------------------------柱状图------------------------  */\n\n\n\n    // 文字legend\n    const height2 = height1 * 2 - 20;\n    const svg2 = d3.select(\"#BarChart\").append('svg')\n      .attr(\"width\", width).attr(\"height\", height2)\n      .attr('id', 'barlabel')\n    // .attr('transform', `translate(0, 0)`)\n\n    const text_g = svg2.append(\"g\")\n    // .attr(\"transform\", \"translate(12,16)\");\n\n    let attrLabels = text_g.selectAll(\".attrLabels\")\n      .data(this.state.attrs)\n      .enter()\n      .append(\"g\")\n      .attr('transform', (d, i) => `translate(${i * gridSize + width*0.085 + gridSize/3}, ${height2})`) // 直接transform <g>\n\n    attrLabels.append(\"text\")\n      .text(d => d)\n      .attr(\"font-size\", \"8pt\")\n      .attr(\"fill\", \"#595959\")\n      .attr(\"transform\", \"rotate(-75)\")\n\n    // x轴\n\n    //  const types = ['1', '2', ' 3', ' 4', '5', '6', '7',' 8','9','10','11', '12', '13 ','14','15','16','17']\n    //  let xScale = d3.scaleBand()\n    //     .domain(types)\n    //     .range([0, axisWidth]\n\n    const tooltip = d3.select(\".heatmap-tooltip\")\n    //.attr(\"transform\", \"translate(10,150)\")\n\n    const svg1 = d3.select(\"#BarChart\").append('svg')\n      .attr(\"width\", width).attr(\"height\", height1 + 5)\n\n    //let axisWidth = width - margin.left - margin.right - 70\n\n    //let axisWidth = width - 70\n    let axisWidth = width * 0.87\n    let xScale = d3.scaleLinear()\n      .domain([0, 17])\n      .range([0, axisWidth])\n\n    let axis = d3.axisBottom(xScale) //定义一个axis，由bottom可知，是朝下的\n      .ticks(17); //设置刻度数目 当使用 band 和 point 比例尺时没有作用 \n\n    let xAxis = svg1.append(\"g\")\n      .attr('transform', `translate(${width*0.085}, ${height1 })`)\n      .call(axis)\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(this.state.allTimes)])\n      .range([height1, 0]);\n\n    const g = svg1.append(\"g\")\n      .attr(\"transform\", `translate(${width*0.085}, 0)`);\n\n    // console.log(this.state.allTimes)\n    const gs = g.selectAll(\".bar\")\n      .data(this.state.allTimes)\n      .enter()\n      .append(\"g\")\n      .attr('class', 'bar')\n\n\n    const rectPadding = width * 0.015; //矩形之间的间隙 20\n    let container = d3.select(\"#AttributesHeatmap\").node()\n    let container1 = d3.select(\"#BarChart\").node()\n    let container2 = d3.select(\"#Heatmap\").node()\n\n\n    gs.append(\"rect\")\n      .attr(\"x\", function (d, i) {\n        //console.log(d, i)\n        return gridSize * i + gridSize * 0.1875\n      })\n      .attr(\"y\", function (d) {\n        //console.log(yScale(d));\n        return yScale(d);\n        //return yScale(d + 10);\n      })\n      .attr(\"width\", function () {\n        return gridSize * 0.625;\n      })\n      .attr(\"height\", function (d) {\n        // console.log(height1 - yScale(d));\n        return height1 - yScale(d);\n      })\n      .attr(\"fill\", \"#91c0db\")\n      .on(\"mousemove\", function (d, i) {\n        let coordinates = d3.mouse(container1);\n        tooltip.style(\"left\", (coordinates[0] + 10) + 'px')\n          .style(\"top\", (coordinates[1] + 10) + 'px')\n          .style(\"display\", \"inline-block\")\n          .html(_this.state.attrs[i] + \"<br>\" + \"sum:\" + d)\n          .style(\"opacity\", .9);\n      })\n      .on(\"mouseout\", function (d) {\n        tooltip.style(\"display\", \"none\").style(\"opacity\", 0);\n      });\n\n\n\n\n    /* ----------------------------热力图------------------------  */\n\n    const svg = d3.select(\"#Heatmap\").append('svg')\n      .attr(\"width\", width).attr(\"height\", height)\n      .attr('id', 'heatmap')\n\n    //圆形+字母 legends\n\n    let focusPerson = store.getState().focusPID\n    const nameLabels = svg.append('g')\n      .attr('class', 'nameLabel')\n      .attr(\"transform\", \"translate(5, \" + (5 + gridSize / 2) + \")\")\n      .selectAll(\"text\")\n      .data(this.state.names)\n      .enter()\n      .append(\"text\")\n      .text(d => d)\n      .attr(\"x\", 0)\n      .attr(\"y\", function (d, i) {\n        return i * gridSize;\n      })\n      .attr(\"font-size\", \"8.5pt\")\n      .attr('cursor', 'pointer')\n      .attr(\"fill\", d=> d == focusPerson?\"#2171b5\": \"#595959\")\n      .on('click', (d)=>{\n          store.dispatch(action.selectPerson(d))\n      })\n\n\n\n    const cards = svg.append('g')\n      .attr(\"transform\", `translate(${width*0.085}, 0)`)\n      .attr('class', 'heatcards')\n      .selectAll(\"rect\")\n      .data(this.state.values)\n      .enter()\n\n    //console.log(cards)\n\n    //  .enter().append(\"rect\")\n    console.log(this.state.values)\n\n    const cardsEnter = cards.append(\"rect\")\n      .attr(\"x\", function (d, i) {\n        return width * 0.87 / 17 * d.col + 2\n      })\n      .attr(\"y\", function (d) {\n        return (d.row) * gridSize;\n      })\n      .attr(\"rx\", 4)\n      .attr(\"ry\", 4)\n      .attr(\"width\", gridSize - 5)\n      .attr(\"height\", gridSize - 5)\n      .attr('stroke', d=>this.state.names[d.row] == focusPerson? 'black': 'none')\n      .attr('stroke-width', d=> d.times == 0? '0':'0.3')\n      .style(\"fill\", function (d) {\n        return color(d.times);\n      })\n      .attr('cursor', 'pointer')\n      .on('click', (d)=>{\n          store.dispatch(action.selectPerson(this.state.names[d.row]))\n      })\n      .on(\"mousemove\", function (d, i) {\n        let coordinates = d3.mouse(container2);\n        // let coordinates = this.setMouse(d3.mouse(this))\n        // console.log(coordinates)\n\n        tooltip.style(\"left\", (coordinates[0] + 10) + 'px')\n          .style(\"top\", (coordinates[1] + 150) + 'px')\n          .style(\"display\", \"inline-block\")\n          .html(_this.state.attrs[d.col] + \"<br>\" + d.times)\n          .style(\"opacity\", .9);\n        // console.log(tooltip)\n      })\n      .on(\"mouseout\", function (d) {\n        tooltip.style(\"display\", \"none\").style(\"opacity\", 0);\n      });\n\n    // console.log(heatmap)\n  }\n\n\n\n  render() {\n    const {\n      data\n    } = this.props;\n    return ( \n    <>\n        <div className = 'header' > Attributes Heatmap </div>\n\n        <div id = 'AttributesHeatmap'\n        className = 'pane' >\n\n        <div className = 'heatmap-tooltip'\n        style = {\n          {\n            opacity: 0\n          }\n        }> </div>\n\n        <div id = 'BarChart' > </div>\n\n        <div id = 'Heatmap'\n        style = {\n          {\n            overflowX: \"hidden\"\n          }\n        }> </div> {\n        /* <BarChart data={data} width={1000} height={550}/> */\n      }\n      </div> \n    </>\n\n  )\n}\n}","D:\\Code\\FDepVis\\src\\views\\DetailInfo\\index.js",["87","88","89","90","91","92","93","94"],"import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport './DetailInfo.css';\nimport { Row, Col, List, Descriptions} from 'antd';\nimport store from '../../redux/index';\nimport axios from 'axios';\n\nexport default class DetailInfo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            ID: 'ID: ',\n            img:\"./img/ASPHYXIA.jpg\",\n            data: {\n                ID: 133,\n                Sex: 'M',\n                Birth_Year: 1900,\n                Death_Year: 1950,\n                BMI: 25,\n                Suicide_Weapon: 'Rope',\n                Death_Cause:'Acute carbon monoxide poisoning',\n                suicide_glyphs:''\n            },\n\n\n        }\n    }\n\n\n\n\n    componentDidMount() {\n        store.subscribe(() => {\n            this.uploadData()\n        })\n        this.uploadData()\n    }\n\n\n    uploadData() {\n        const focusPID = store.getState().focusPID\n        axios.get(\"http://106.52.126.175/api/getDetailInfo/\" + '?pid=' + focusPID\n        ).then((res) => {\n            let data = res.data;\n            console.log(\"detailInfo\", data)\n            // if (data.maxbmi == 0) {\n            //     data.maxbmi = 22\n            // }\n            this.setState({\n                ID: 'ID: ' + data.pid,\n                img: \"./img/\" + data.suicide_glyphs + \".png\",\n                data: {\n                    ID: data.pid,\n                    Sex: data.sex,\n                    Birth_Year: data.bdate.slice(0,4),\n                    Death_Year: data.ddate.slice(0,4),\n                    BMI: data.maxbmi.toPrecision(4), //保留四位有效数字\n                    Suicide_Weapon: data.weapon,\n                    Death_Cause: data.cause_death,\n                    \n                },\n    \n            })\n            // document.getElementById(\"BarChart\").innerHTML = ''\n            // document.getElementById(\"Heatmap\").innerHTML = ''\n            this.drawChart()\n        })\n    }\n\n    drawChart() {\n\n        // preserveAspectRatio=\"none\" 不保留长宽比例\n        const man_body = '<svg preserveAspectRatio=\"none\" id=\"man\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2940\" width=\"200\" height=\"200\"><path d=\"M512 88m-88 0a88 88 0 1 0 176 0 88 88 0 1 0-176 0Z\" fill=\"#333333\" p-id=\"2941\"></path><path d=\"M744.9 619.6c-21.3 5.7-43.3-6.9-49-28.3l-64.1-239c-1.2-4.5-7.9-3.6-7.9 1V1008c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16V640c0-8.8-7.2-16-16-16s-16 7.2-16 16v368c0 8.8-7.2 16-16 16h-64c-8.8 0-16-7.2-16-16V353.3c0-4.7-6.7-5.6-7.9-1l-64.1 239c-5.7 21.3-27.7 34-49 28.3-21.3-5.7-34-27.6-28.3-49l69.5-260C339 240.7 402.4 192 474.8 192h74.3c72.5 0 135.9 48.7 154.6 118.7l69.5 260c5.7 21.3-6.9 43.2-28.3 48.9z\" fill=\"#333333\" p-id=\"2942\"></path></svg>'\n\n        const woman_body = '<svg preserveAspectRatio=\"none\" id=\"woman\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2987\" width=\"225\" height=\"225\"><path d=\"M529.218 234.374c43.289 0 81.292 28.8 93 70.475l59.925 213.319c3.427 12.199-3.685 24.867-15.884 28.294-2.02 0.567-4.107 0.855-6.205 0.855-17.951 0-33.758-11.825-38.826-29.046l-53.568-182.01h-16.407l95.16 333.52h-87.43v244.56c0 19.694-15.966 35.659-35.66 35.659-19.693 0-35.658-15.965-35.658-35.659v-244.56h-17.112v245.697c0 18.983-15.39 34.372-34.372 34.372h-0.15c-19.09-0.084-34.522-15.583-34.522-34.673V669.78h-90.078l95.242-333.519h-14.872l-51.123 180.873c-5.047 17.855-21.342 30.183-39.897 30.183-13.136 0-23.785-10.649-23.785-23.785 0-2.17 0.297-4.329 0.882-6.418l59.465-212.205c11.687-41.706 49.705-70.535 93.017-70.535h98.858zM479.962 71c40.643 0 73.59 32.967 73.59 73.634 0 40.666-32.947 73.633-73.59 73.633s-73.59-32.967-73.59-73.633c0-40.667 32.947-73.634 73.59-73.634z\" fill=\"#333333\" p-id=\"2988\"></path></svg>'\n\n        let sex_icon;\n        if(this.state.data.Sex == 'M') {\n            sex_icon = man_body\n        } else if (this.state.data.Sex == 'F'){\n            sex_icon = woman_body\n        }\n        document.getElementById(\"body\").innerHTML = sex_icon\n\n        const height = document.getElementById(\"body\").clientHeight\n        const width = document.getElementById(\"body\").clientWidth\n\n        let bmi = this.state.data.BMI\n\n        if (bmi == 0) {\n            bmi = 22\n        }\n\n        //let new_width = 200;\n        let new_width = width * (bmi / 22)\n        let new_height = height * 0.9\n        console.log(bmi / 22, new_width)\n\n        if (this.state.data.Sex == 'M'){\n        d3.select(\"#man\")\n            .attr('width', new_width)\n            .attr(\"height\", new_height)\n            .attr(\"transform\", `translate(${(200 - new_width) / 2},${new_height * 0.05})`)\n            \n        } else if (this.state.data.Sex == 'F') {\n        d3.select(\"#woman\")\n            .attr('width', new_width)\n            .attr(\"height\", new_height)\n            .attr(\"transform\", `translate(${(200 - new_width) / 2}, ${new_height * 0.05})`)\n        }\n      \n\n        // -----------------  rect 透明蒙板 ------------------------\n        // console.log(this.state.data.ddate)\n        // console.log(this.state.data.bdate)\n        let age = this.state.data.Death_Year - this.state.data.Birth_Year\n\n        console.log(age)\n\n        let svg = d3.select(\"#body\").append('svg')\n            .attr(\"width\", width).attr(\"height\", height)\n            .attr(\"transform\", `translate(0, ${- (100-age) * 1.8})`);\n\n        svg.append(\"rect\")\n            .attr(\"width\", width).attr(\"height\", 200)\n            .attr(\"fill\", \"white\")\n            .attr(\"opacity\", 0.35)\n    }\n\n\n    render() {\n        return (\n            <div id='DetailInfo' className='pane' style={{overflow : \"hidden\"}}>\n                <div className='header'>Detail Information</div>\n\n                {/* <div id = 'info' style={{ left : 200}}>  </div> */}\n\n                <Row justify=\"space-around\" align=\"middle\">\n\n                    <Col span={10} style={{ paddingTop: 10 }}>\n                        <Row>                       \n                            <div id='body' style={{ margin: 10 }}> </div>                       \n                        </Row>\n\n                        {/* <Row>\n                        <img width={100} style={{}} src=\"./img/ASPHYXIA.jpg\"/>\n                        </Row> */}\n\n                    </Col>\n\n                    <Col span={14} >\n                    \n                        <Descriptions title={this.state.ID} style={{ padding: 10 }} >\n                            <Descriptions.Item label=\"Sex\" span={2}>\n                                {this.state.data.Sex}\n                            </Descriptions.Item>\n                            \n                            <Descriptions.Item label=\"BMI\" span={2}>\n                                {this.state.data.BMI}\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Birth Year\" span={2}>\n                                {this.state.data.Birth_Year}\n                            </Descriptions.Item>\n                            \n                            <Descriptions.Item label=\"Death Year\" span={2}>\n                                {this.state.data.Death_Year}\n                            </Descriptions.Item>\n                            \n                            <Descriptions.Item label=\"Death Age\" span={4}>\n                                {this.state.data.Death_Year - this.state.data.Birth_Year}\n                            </Descriptions.Item>\n\n                    \n                            \n\n                            <Descriptions.Item label=\"Death Cause\" span={4}>\n                                {this.state.data.Death_Cause}\n                            </Descriptions.Item>\n\n                            <Descriptions.Item label=\"Suicide Weapon\" span={2}>\n                                {this.state.data.Suicide_Weapon}\n                            </Descriptions.Item>     \n\n                            <Descriptions.Item label=\"\"  >\n                                <img width={50} style={{}} src={this.state.img}/>\n                            </Descriptions.Item>\n                            \n                        </Descriptions>\n\n                    </Col>\n\n                    {/* <Col span={1}></Col> */}\n\n                </Row>\n\n            </div>\n        )\n    }\n}","D:\\Code\\FDepVis\\src\\redux\\index.js",[],"D:\\Code\\FDepVis\\src\\redux\\actions.js",[],"D:\\Code\\FDepVis\\src\\redux\\reducers.js",[],"D:\\Code\\FDepVis\\src\\redux\\state.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":106,"column":14,"nodeType":"101","endLine":106,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":27,"column":57,"nodeType":"104","messageId":"105","endLine":27,"endColumn":58},{"ruleId":"106","severity":1,"message":"107","line":165,"column":81,"nodeType":"104","messageId":"108","endLine":165,"endColumn":83},{"ruleId":"106","severity":1,"message":"107","line":179,"column":42,"nodeType":"104","messageId":"108","endLine":179,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":230,"column":36,"nodeType":"104","messageId":"108","endLine":230,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":233,"column":37,"nodeType":"104","messageId":"108","endLine":233,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":274,"column":44,"nodeType":"104","messageId":"108","endLine":274,"endColumn":46},{"ruleId":"106","severity":1,"message":"109","line":276,"column":29,"nodeType":"104","messageId":"108","endLine":276,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":324,"column":15,"nodeType":"112","messageId":"113","endLine":324,"endColumn":20},{"ruleId":"110","severity":1,"message":"114","line":368,"column":15,"nodeType":"112","messageId":"113","endLine":368,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":184,"column":38,"nodeType":"104","messageId":"108","endLine":184,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":206,"column":66,"nodeType":"104","messageId":"105","endLine":206,"endColumn":67},{"ruleId":"110","severity":1,"message":"115","line":3,"column":17,"nodeType":"112","messageId":"113","endLine":3,"endColumn":20},{"ruleId":"110","severity":1,"message":"116","line":3,"column":22,"nodeType":"112","messageId":"113","endLine":3,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":50,"column":20,"nodeType":"104","messageId":"108","endLine":50,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":66,"column":47,"nodeType":"104","messageId":"108","endLine":66,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":82,"column":65,"nodeType":"104","messageId":"108","endLine":82,"endColumn":67},{"ruleId":"106","severity":1,"message":"107","line":86,"column":68,"nodeType":"104","messageId":"108","endLine":86,"endColumn":70},{"ruleId":"102","severity":1,"message":"103","line":56,"column":56,"nodeType":"104","messageId":"105","endLine":56,"endColumn":57},{"ruleId":"110","severity":1,"message":"117","line":70,"column":9,"nodeType":"112","messageId":"113","endLine":70,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":104,"column":20,"nodeType":"120","messageId":"121","endLine":104,"endColumn":32},{"ruleId":"110","severity":1,"message":"122","line":138,"column":11,"nodeType":"112","messageId":"113","endLine":138,"endColumn":17},{"ruleId":"110","severity":1,"message":"123","line":158,"column":11,"nodeType":"112","messageId":"113","endLine":158,"endColumn":17},{"ruleId":"110","severity":1,"message":"124","line":212,"column":9,"nodeType":"112","messageId":"113","endLine":212,"endColumn":14},{"ruleId":"110","severity":1,"message":"125","line":231,"column":11,"nodeType":"112","messageId":"113","endLine":231,"endColumn":22},{"ruleId":"110","severity":1,"message":"126","line":232,"column":9,"nodeType":"112","messageId":"113","endLine":232,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":260,"column":47,"nodeType":"104","messageId":"105","endLine":260,"endColumn":48},{"ruleId":"110","severity":1,"message":"127","line":279,"column":11,"nodeType":"112","messageId":"113","endLine":279,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":293,"column":27,"nodeType":"104","messageId":"108","endLine":293,"endColumn":29},{"ruleId":"110","severity":1,"message":"128","line":312,"column":11,"nodeType":"112","messageId":"113","endLine":312,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":323,"column":50,"nodeType":"104","messageId":"108","endLine":323,"endColumn":52},{"ruleId":"106","severity":1,"message":"107","line":324,"column":41,"nodeType":"104","messageId":"108","endLine":324,"endColumn":43},{"ruleId":"110","severity":1,"message":"129","line":355,"column":7,"nodeType":"112","messageId":"113","endLine":355,"endColumn":11},{"ruleId":"110","severity":1,"message":"130","line":4,"column":20,"nodeType":"112","messageId":"113","endLine":4,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":42,"column":62,"nodeType":"104","messageId":"105","endLine":42,"endColumn":63},{"ruleId":"106","severity":1,"message":"107","line":78,"column":32,"nodeType":"104","messageId":"108","endLine":78,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":80,"column":40,"nodeType":"104","messageId":"108","endLine":80,"endColumn":42},{"ruleId":"106","severity":1,"message":"107","line":90,"column":17,"nodeType":"104","messageId":"108","endLine":90,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":99,"column":33,"nodeType":"104","messageId":"108","endLine":99,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":105,"column":40,"nodeType":"104","messageId":"108","endLine":105,"endColumn":42},{"ruleId":"131","severity":1,"message":"132","line":186,"column":33,"nodeType":"101","endLine":186,"endColumn":82},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'width' is assigned a value but never used.","Identifier","unusedVar","'segments' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'allCount' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'margin' is assigned a value but never used.","'colors' is assigned a value but never used.","'xAxis' is assigned a value but never used.","'rectPadding' is assigned a value but never used.","'container' is assigned a value but never used.","'nameLabels' is assigned a value but never used.","'cardsEnter' is assigned a value but never used.","'data' is assigned a value but never used.","'List' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]